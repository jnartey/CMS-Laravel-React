{"ast":null,"code":"import { createElement } from 'react';\nimport MuiTextField from '@material-ui/core/TextField';\nimport { getIn } from 'formik';\nimport MuiSwitch from '@material-ui/core/Switch';\nimport MuiCheckbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport MuiSelect from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport MuiRadioGroup from '@material-ui/core/RadioGroup';\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\nvar _assign = function __assign() {\n  _assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return _assign.apply(this, arguments);\n};\n\nfunction __rest(s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n}\n\nvar fieldToTextField = function fieldToTextField(_a) {\n  var field = _a.field,\n      form = _a.form,\n      _b = _a.disabled,\n      disabled = _b === void 0 ? false : _b,\n      props = __rest(_a, [\"field\", \"form\", \"disabled\"]);\n\n  var name = field.name;\n  var touched = form.touched,\n      errors = form.errors,\n      isSubmitting = form.isSubmitting;\n  var fieldError = getIn(errors, name);\n  var showError = getIn(touched, name) && !!fieldError;\n  return _assign({}, props, field, {\n    error: showError,\n    helperText: showError ? fieldError : props.helperText,\n    disabled: isSubmitting || disabled\n  });\n};\n\nvar TextField = function TextField(props) {\n  return createElement(MuiTextField, _assign({}, fieldToTextField(props)));\n};\n\nTextField.displayName = 'FormikMaterialUITextField';\n\nvar fieldToSwitch = function fieldToSwitch(_a) {\n  var field = _a.field,\n      isSubmitting = _a.form.isSubmitting,\n      _b = _a.disabled,\n      disabled = _b === void 0 ? false : _b,\n      props = __rest(_a, [\"field\", \"form\", \"disabled\"]);\n\n  return _assign({\n    disabled: isSubmitting || disabled\n  }, props, field, {\n    value: field.name,\n    checked: field.value\n  });\n};\n\nvar Switch = function Switch(props) {\n  return createElement(MuiSwitch, _assign({}, fieldToSwitch(props)));\n};\n\nSwitch.displayName = 'FormikMaterialUISwitch';\n\nvar fieldToCheckbox = function fieldToCheckbox(_a) {\n  var field = _a.field,\n      isSubmitting = _a.form.isSubmitting,\n      _b = _a.disabled,\n      disabled = _b === void 0 ? false : _b,\n      props = __rest(_a, [\"field\", \"form\", \"disabled\"]);\n\n  return _assign({\n    disabled: isSubmitting || disabled\n  }, props, field, {\n    checked: field.value ? 'checked' : '',\n    value: field.value ? 'checked' : ''\n  });\n};\n\nvar Checkbox = function Checkbox(props) {\n  return createElement(MuiCheckbox, _assign({}, fieldToCheckbox(props)));\n};\n\nCheckbox.displayName = 'FormikMaterialUICheckbox';\n\nvar CheckboxWithLabel = function CheckboxWithLabel(_a) {\n  var Label = _a.Label,\n      props = __rest(_a, [\"Label\"]);\n\n  return createElement(FormControlLabel, _assign({\n    control: createElement(MuiCheckbox, _assign({}, fieldToCheckbox(props)))\n  }, Label));\n};\n\nCheckboxWithLabel.displayName = 'FormikMaterialUICheckboxWithLabel';\n\nvar fieldToSelect = function fieldToSelect(_a) {\n  var field = _a.field,\n      isSubmitting = _a.form.isSubmitting,\n      _b = _a.disabled,\n      disabled = _b === void 0 ? false : _b,\n      props = __rest(_a, [\"field\", \"form\", \"disabled\"]);\n\n  return _assign({\n    disabled: isSubmitting || disabled\n  }, props, field);\n};\n\nvar Select = function Select(props) {\n  return createElement(MuiSelect, _assign({}, fieldToSelect(props)));\n};\n\nSelect.displayName = 'FormikMaterialUISelect';\n\nvar SimpleFileUpload = function SimpleFileUpload(_a) {\n  var label = _a.label,\n      field = _a.field,\n      _b = _a.form,\n      touched = _b.touched,\n      errors = _b.errors,\n      isSubmitting = _b.isSubmitting,\n      setFieldValue = _b.setFieldValue,\n      _c = _a.disabled,\n      disabled = _c === void 0 ? false : _c;\n  var error = getIn(touched, field.name) && getIn(errors, field.name);\n  return createElement(\"div\", null, createElement(FormControl, null, label && createElement(InputLabel, {\n    shrink: true,\n    error: !!error\n  }, label), createElement(Input, {\n    error: !!error,\n    inputProps: {\n      type: 'file',\n      disabled: disabled || isSubmitting,\n      name: field.name,\n      onChange: function onChange(event) {\n        var file = event.currentTarget.files[0];\n        setFieldValue(field.name, file);\n      }\n    }\n  }), error && createElement(FormHelperText, {\n    error: true\n  }, error)));\n};\n\nvar fieldToRadioGroup = function fieldToRadioGroup(_a) {\n  var field = _a.field,\n      form = _a.form,\n      props = __rest(_a, [\"field\", \"form\"]);\n\n  return _assign({}, props, field);\n};\n\nvar RadioGroup = function RadioGroup(props) {\n  return createElement(MuiRadioGroup, _assign({}, fieldToRadioGroup(props)));\n};\n\nRadioGroup.displayName = 'FormikMaterialUIRadioGroup';\nexport { fieldToTextField, TextField, fieldToSwitch, Switch, fieldToCheckbox, Checkbox, CheckboxWithLabel, fieldToSelect, Select, SimpleFileUpload, fieldToRadioGroup, RadioGroup };","map":null,"metadata":{},"sourceType":"module"}