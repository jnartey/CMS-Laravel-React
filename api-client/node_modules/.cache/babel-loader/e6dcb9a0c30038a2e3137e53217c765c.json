{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Password = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _InputText = require('../inputtext/InputText');\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _DomHandler = require('../utils/DomHandler');\n\nvar _DomHandler2 = _interopRequireDefault(_DomHandler);\n\nvar _Tooltip = require('../tooltip/Tooltip');\n\nvar _Tooltip2 = _interopRequireDefault(_Tooltip);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Password = exports.Password = function (_Component) {\n  _inherits(Password, _Component);\n\n  function Password(props) {\n    _classCallCheck(this, Password);\n\n    var _this = _possibleConstructorReturn(this, (Password.__proto__ || Object.getPrototypeOf(Password)).call(this, props));\n\n    _this.onFocus = _this.onFocus.bind(_this);\n    _this.onBlur = _this.onBlur.bind(_this);\n    _this.onKeyup = _this.onKeyup.bind(_this);\n    return _this;\n  }\n\n  _createClass(Password, [{\n    key: 'onFocus',\n    value: function onFocus(e) {\n      var _this2 = this;\n\n      if (this.props.feedback) {\n        if (!this.panel) {\n          this.createPanel();\n        }\n\n        this.panel.style.zIndex = String(_DomHandler2.default.generateZIndex());\n        this.panel.style.display = 'block';\n        setTimeout(function () {\n          _DomHandler2.default.addClass(_this2.panel, 'p-input-overlay-visible');\n\n          _DomHandler2.default.removeClass(_this2.panel, 'p-input-overlay-hidden');\n        }, 1);\n\n        _DomHandler2.default.absolutePosition(this.panel, this.inputEl);\n      }\n\n      if (this.props.onFocus) {\n        this.props.onFocus(e);\n      }\n    }\n  }, {\n    key: 'onBlur',\n    value: function onBlur(e) {\n      var _this3 = this;\n\n      if (this.props.feedback) {\n        _DomHandler2.default.addClass(this.panel, 'p-input-overlay-hidden');\n\n        _DomHandler2.default.removeClass(this.panel, 'p-input-overlay-visible');\n\n        setTimeout(function () {\n          _this3.panel.style.display = 'none';\n\n          _DomHandler2.default.removeClass(_this3.panel, 'p-input-overlay-hidden');\n        }, 150);\n      }\n\n      if (this.props.onBlur) {\n        this.props.onBlur(e);\n      }\n    }\n  }, {\n    key: 'onKeyup',\n    value: function onKeyup(e) {\n      if (this.props.feedback) {\n        var value = e.target.value,\n            label = null,\n            meterPos = null;\n\n        if (value.length === 0) {\n          label = this.props.promptLabel;\n          meterPos = '0px 0px';\n        } else {\n          var score = this.testStrength(value);\n\n          if (score < 30) {\n            label = this.props.weakLabel;\n            meterPos = '0px -10px';\n          } else if (score >= 30 && score < 80) {\n            label = this.props.mediumLabel;\n            meterPos = '0px -20px';\n          } else if (score >= 80) {\n            label = this.props.strongLabel;\n            meterPos = '0px -30px';\n          }\n        }\n\n        this.meter.style.backgroundPosition = meterPos;\n        this.info.textContent = label;\n      }\n\n      if (this.props.onKeyUp) {\n        this.props.onKeyUp(e);\n      }\n    }\n  }, {\n    key: 'testStrength',\n    value: function testStrength(str) {\n      var grade = 0;\n      var val = void 0;\n      val = str.match('[0-9]');\n      grade += this.normalize(val ? val.length : 1 / 4, 1) * 25;\n      val = str.match('[a-zA-Z]');\n      grade += this.normalize(val ? val.length : 1 / 2, 3) * 10;\n      val = str.match('[!@#$%^&*?_~.,;=]');\n      grade += this.normalize(val ? val.length : 1 / 6, 1) * 35;\n      val = str.match('[A-Z]');\n      grade += this.normalize(val ? val.length : 1 / 6, 1) * 30;\n      grade *= str.length / 8;\n      return grade > 100 ? 100 : grade;\n    }\n  }, {\n    key: 'normalize',\n    value: function normalize(x, y) {\n      var diff = x - y;\n      if (diff <= 0) return x / y;else return 1 + 0.5 * (x / (x + y / 4));\n    }\n  }, {\n    key: 'createPanel',\n    value: function createPanel() {\n      this.panel = document.createElement('div');\n      this.panel.className = 'p-password-panel p-component p-highlight p-hidden p-password-panel-overlay p-input-overlay';\n      this.meter = document.createElement('div');\n      this.meter.className = 'p-password-meter';\n      this.info = document.createElement('div');\n      this.info.className = 'p-password-info';\n      this.info.textContent = this.props.promptLabel;\n      this.panel.style.minWidth = _DomHandler2.default.getOuterWidth(this.inputEl) + 'px';\n      this.panel.appendChild(this.meter);\n      this.panel.appendChild(this.info);\n      document.body.appendChild(this.panel);\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      if (this.props.tooltip) {\n        this.tooltip = new _Tooltip2.default({\n          target: this.inputEl,\n          content: this.props.tooltip,\n          options: this.props.tooltipOptions\n        });\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      if (this.feedback && this.panel) {\n        this.panel.removeChild(this.meter);\n        this.panel.removeChild(this.info);\n        document.body.removeChild(this.panel);\n        this.panel = null;\n        this.meter = null;\n        this.info = null;\n      }\n\n      if (this.tooltip) {\n        this.tooltip.destroy();\n        this.tooltip = null;\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this4 = this;\n\n      var inputProps = Object.assign({}, this.props);\n      delete inputProps.onFocus;\n      delete inputProps.onBlur;\n      delete inputProps.onKeyUp;\n      delete inputProps.promptLabel;\n      delete inputProps.weakLabel;\n      delete inputProps.mediumLabel;\n      delete inputProps.strongLabel;\n      delete inputProps.feedback;\n      return _react2.default.createElement(_InputText.InputText, _extends({\n        ref: function ref(el) {\n          return _this4.inputEl = _reactDom2.default.findDOMNode(el);\n        }\n      }, inputProps, {\n        type: 'password',\n        onFocus: this.onFocus,\n        onBlur: this.onBlur,\n        onKeyUp: this.onKeyup\n      }));\n    }\n  }]);\n\n  return Password;\n}(_react.Component);\n\nPassword.defaultProps = {\n  promptLabel: 'Enter a password',\n  weakLabel: 'Weak',\n  mediumLabel: 'Medium',\n  strongLabel: 'Strong',\n  feedback: true,\n  tooltip: null,\n  tooltipOptions: null\n};\nPassword.propTypes = {\n  promptLabel: _propTypes2.default.string,\n  weakLabel: _propTypes2.default.string,\n  mediumLabel: _propTypes2.default.string,\n  strongLabel: _propTypes2.default.string,\n  feedback: _propTypes2.default.bool,\n  tooltip: _propTypes2.default.string,\n  tooltipOptions: _propTypes2.default.object\n};","map":null,"metadata":{},"sourceType":"script"}