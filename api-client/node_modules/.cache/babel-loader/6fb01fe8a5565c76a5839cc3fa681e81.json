{"ast":null,"code":"import _objectWithoutProperties from \"/Users/user/Documents/Dev/api-client/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/user/Documents/Dev/api-client/src/components/PrivateRoute.jsx\";\n// This is used to determine if a user is authenticated and\n// if they are allowed to visit the page they navigated to.\n// If they are: they proceed to the page\n// If not: they are redirected to the login page.\nimport React from \"react\";\nimport { Auth } from \"./Auth\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nvar PrivateRoute = function PrivateRoute(_ref) {\n  var Component = _ref.component,\n      authenticated = _ref.authenticated,\n      rest = _objectWithoutProperties(_ref, [\"component\", \"authenticated\"]);\n\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: function render(props) {\n      return authenticated === true ? React.createElement(Component, Object.assign({}, props, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      })) : React.createElement(Redirect, {\n        to: {\n          pathname: \"/admin/login\",\n          state: {\n            from: props.location\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }));\n};\n\nexport default PrivateRoute;","map":{"version":3,"sources":["/Users/user/Documents/Dev/api-client/src/components/PrivateRoute.jsx"],"names":["React","Auth","Redirect","Route","PrivateRoute","Component","component","authenticated","rest","props","pathname","state","from","location"],"mappings":";;AAAA;AACA;AAEA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAsD;AAAA,MAAxCC,SAAwC,QAAnDC,SAAmD;AAAA,MAA7BC,aAA6B,QAA7BA,aAA6B;AAAA,MAAXC,IAAW;;AACzE,SACE,oBAAC,KAAD,oBACMA,IADN;AAEE,IAAA,MAAM,EAAE,gBAAAC,KAAK;AAAA,aACXF,aAAa,KAAK,IAAlB,GACE,oBAAC,SAAD,oBAAeE,KAAf,EAA0BD,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,GAGE,oBAAC,QAAD;AACE,QAAA,EAAE,EAAE;AAAEE,UAAAA,QAAQ,EAAE,cAAZ;AAA4BC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,IAAI,EAAEH,KAAK,CAACI;AAAd;AAAnC,SADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJS;AAAA,KAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAcD,CAfD;;AAiBA,eAAeT,YAAf","sourcesContent":["// This is used to determine if a user is authenticated and\n// if they are allowed to visit the page they navigated to.\n\n// If they are: they proceed to the page\n// If not: they are redirected to the login page.\nimport React from \"react\";\nimport { Auth } from \"./Auth\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nconst PrivateRoute = ({ component: Component, authenticated, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        authenticated === true ? (\n          <Component {...props} {...rest} />\n        ) : (\n          <Redirect\n            to={{ pathname: \"/admin/login\", state: { from: props.location } }}\n          />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n"]},"metadata":{},"sourceType":"module"}