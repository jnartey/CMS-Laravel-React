{"ast":null,"code":"import _assertThisInitialized from \"/Users/user/Documents/Dev/api-client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _defineProperty from \"/Users/user/Documents/Dev/api-client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/user/Documents/Dev/api-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/user/Documents/Dev/api-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/user/Documents/Dev/api-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/user/Documents/Dev/api-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/user/Documents/Dev/api-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _objectSpread from \"/Users/user/Documents/Dev/api-client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/user/Documents/Dev/api-client/src/components/admin/users.jsx\";\nimport React, { Component } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport classNames from \"classnames\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport SupervisorAccount from \"@material-ui/icons/SupervisorAccount\";\nimport Dboard from \"@material-ui/icons/Dashboard\";\nimport PermIdentity from \"@material-ui/icons/PermIdentity\";\nimport Pageview from \"@material-ui/icons/PageviewOutlined\";\nimport Edit from \"@material-ui/icons/EditOutlined\";\nimport Delete from \"@material-ui/icons/DeleteOutlined\";\nimport SaveIcon from \"@material-ui/icons/SaveOutlined\";\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { MySnackbarContentWrapper } from \"../../helpers/snackbar.helper\"; //Table Imports\n\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport DeleteIcon from \"@material-ui/icons/DeleteOutlined\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport AutoRenewIcon from \"@material-ui/icons/AutorenewOutlined\";\nimport { lighten } from \"@material-ui/core/styles/colorManipulator\"; //Form dialog imports\n\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport FilledInput from \"@material-ui/core/FilledInput\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\"; //Form validation imports\n\nimport { ValidatorForm, TextValidator, SelectValidator } from \"react-material-ui-form-validator\"; //Get data import\n\nimport { GetData } from \"../../services/GetData\";\nimport { PostData } from \"../../services/PostData\";\nimport { PostDataAuth } from \"../../services/PostDataAuth\";\nimport { DeleteData } from \"../../services/DeleteData\";\nimport { generatePassword } from \"../../helpers/password.generator\"; //Loader import\n\nimport Loader from \"../Loader\"; //CSS for custom header cell\n\nvar CustomTableCell = withStyles(function (theme) {\n  return {\n    head: {\n      backgroundColor: \"#f2f4f9\",\n      fontWeight: 600,\n      color: \"#555555\" //theme.palette.common.white\n\n    },\n    body: {\n      fontSize: 14\n    }\n  };\n})(TableCell); //General styles\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      width: \"100%\",\n      marginTop: theme.spacing.unit * 3\n    },\n    content: {\n      flexGrow: 1,\n      padding: \"6rem 1.5rem\"\n    },\n    paper: {\n      padding: theme.spacing.unit * 4,\n      color: theme.palette.text.secondary\n    },\n    toolbar: _objectSpread({\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-end\",\n      padding: \"0 8px\"\n    }, theme.mixins.toolbar),\n    textRight: {\n      textAlign: \"right\"\n    },\n    breadCrumbs: {\n      marginBottom: \"1rem\"\n    },\n    update: {\n      padding: \"0rem 2rem\"\n    },\n    chip: {\n      marginRight: theme.spacing.unit\n    },\n    table: {\n      minWidth: 1020\n    },\n    tableWrapper: {\n      overflowX: \"auto\"\n    },\n    dialogAction: {\n      padding: \"0 20px 20px\",\n      margin: \"14px 0 0\"\n    },\n    padRight: {\n      paddingRight: \"0.35rem\"\n    },\n    padLeft: {\n      paddingLeft: \"0.35rem\"\n    },\n    buttonMargin: {\n      margin: \"0.7rem 0 0\",\n      paddingLeft: \"0.8rem\" //   button: {\n      //     minWidth: \"32px\"\n      //   }\n\n    }\n  };\n};\n\ncreateMuiTheme({\n  typography: {\n    useNextVariants: true\n  }\n});\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  var stabilizedThis = array.map(function (el, index) {\n    return [el, index];\n  });\n  stabilizedThis.sort(function (a, b) {\n    var order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(function (el) {\n    return el[0];\n  });\n}\n\nfunction getSorting(order, orderBy) {\n  return order === \"desc\" ? function (a, b) {\n    return desc(a, b, orderBy);\n  } : function (a, b) {\n    return -desc(a, b, orderBy);\n  };\n}\n\nfunction confirmAlertSelected() {\n  // this.setState({\n  //   deleted: true,\n  //   alertTitle: \"Confirm Delete\",\n  //   alertMessage: \"Are you sure you want to delete selected user accounts?\",\n  //   toDelete: this.state.selected\n  // });\n  console.log(\"yes\");\n}\n\nvar rows = [{\n  id: \"first_name\",\n  string: true,\n  disablePadding: true,\n  label: \"Name\"\n}, {\n  id: \"email\",\n  string: true,\n  disablePadding: false,\n  label: \"Email\"\n}, {\n  id: \"roles\",\n  string: true,\n  disablePadding: false,\n  label: \"Role\"\n}, {\n  id: \"status\",\n  string: true,\n  disablePadding: false,\n  label: \"Status\"\n}, {\n  id: \"action\",\n  string: true,\n  disablePadding: false,\n  label: \"Action\"\n}];\n\nvar EnhancedTableHead =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EnhancedTableHead, _React$Component);\n\n  function EnhancedTableHead() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EnhancedTableHead);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EnhancedTableHead)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.createSortHandler = function (property) {\n      return function (event) {\n        _this.props.onRequestSort(event, property);\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(EnhancedTableHead, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          onSelectAllClick = _this$props.onSelectAllClick,\n          order = _this$props.order,\n          orderBy = _this$props.orderBy,\n          numSelected = _this$props.numSelected,\n          rowCount = _this$props.rowCount;\n      return React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(CustomTableCell, {\n        padding: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        indeterminate: numSelected > 0 && numSelected < rowCount,\n        checked: numSelected === rowCount,\n        onChange: onSelectAllClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      })), rows.map(function (row) {\n        return React.createElement(CustomTableCell, {\n          key: row.id,\n          padding: row.disablePadding ? \"none\" : \"default\",\n          sortDirection: orderBy === row.id ? order : false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223\n          },\n          __self: this\n        }, React.createElement(Tooltip, {\n          title: \"Sort\",\n          placement: row.string ? \"bottom-end\" : \"bottom-start\",\n          enterDelay: 300,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228\n          },\n          __self: this\n        }, React.createElement(TableSortLabel, {\n          active: orderBy === row.id,\n          direction: order,\n          onClick: _this2.createSortHandler(row.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233\n          },\n          __self: this\n        }, row.label)));\n      }, this)));\n    }\n  }]);\n\n  return EnhancedTableHead;\n}(React.Component);\n\nEnhancedTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.string.isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\n\nvar toolbarStyles = function toolbarStyles(theme) {\n  return {\n    root: {\n      paddingRight: theme.spacing.unit\n    },\n    highlight: theme.palette.type === \"light\" ? {\n      color: theme.palette.secondary.main,\n      backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n    } : {\n      color: theme.palette.text.primary,\n      backgroundColor: theme.palette.secondary.dark\n    },\n    spacer: {\n      flex: \"1 1 100%\"\n    },\n    actions: {\n      color: theme.palette.text.secondary\n    },\n    title: {\n      flex: \"0 0 auto\"\n    }\n  };\n};\n\nvar EnhancedTableToolbar = function EnhancedTableToolbar(props) {\n  var numSelected = props.numSelected,\n      classes = props.classes;\n  return React.createElement(Toolbar, {\n    className: classNames(classes.root, _defineProperty({}, classes.highlight, numSelected > 0)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293\n    },\n    __self: this\n  }, numSelected > 0 ? React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"subtitle1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295\n    },\n    __self: this\n  }, numSelected, \" selected\") : React.createElement(Typography, {\n    variant: \"h6\",\n    id: \"tableTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299\n    },\n    __self: this\n  }, tableTitle)), React.createElement(\"div\", {\n    className: classes.spacer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.actions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305\n    },\n    __self: this\n  }, numSelected > 0 ? React.createElement(Tooltip, {\n    title: \"Delete\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    onClick: confirmAlertSelected,\n    \"aria-label\": \"Delete\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308\n    },\n    __self: this\n  }, React.createElement(DeleteIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309\n    },\n    __self: this\n  }))) : React.createElement(Tooltip, {\n    title: \"Filter list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    \"aria-label\": \"Filter list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314\n    },\n    __self: this\n  }, React.createElement(FilterListIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315\n    },\n    __self: this\n  })))));\n};\n\nEnhancedTableToolbar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired\n};\nEnhancedTableToolbar = withStyles(toolbarStyles)(EnhancedTableToolbar);\nvar tableTitle = \"Users\";\n\nvar Users =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Users, _Component);\n\n  function Users(props) {\n    var _this3;\n\n    _classCallCheck(this, Users);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(Users).call(this, props));\n    _this3.state = {};\n\n    _this3.handleRequestSort = function (event, property) {\n      var orderBy = property;\n      var order = \"desc\";\n\n      if (_this3.state.orderBy === property && _this3.state.order === \"desc\") {\n        order = \"asc\";\n      }\n\n      _this3.setState({\n        order: order,\n        orderBy: orderBy\n      });\n    };\n\n    _this3.getUsers = function () {\n      GetData(\"users\", _this3.state.userData.token).then(function (result) {\n        if (_this3._isMounted) {\n          var reponseJSON = result;\n\n          if (reponseJSON.data) {\n            _this3.setState({\n              data: reponseJSON.data.filter(function (n) {\n                return n.id !== _this3.state.userData.id;\n              }),\n              loading: false\n            }); //console.log(reponseJSON.data);\n\n          } else {\n            _this3.setState({\n              loading: false\n            });\n          }\n        }\n      });\n    };\n\n    _this3.handleSelectAllClick = function (event) {\n      if (event.target.checked) {\n        _this3.setState(function (state) {\n          return {\n            selected: state.data.map(function (n) {\n              return n.id;\n            })\n          };\n        });\n\n        return;\n      }\n\n      _this3.setState({\n        selected: []\n      });\n    };\n\n    _this3.handleClick = function (event, id) {\n      var selected = _this3.state.selected;\n      var selectedIndex = selected.indexOf(id);\n      var newSelected = [];\n\n      if (selectedIndex === -1) {\n        newSelected = newSelected.concat(selected, id);\n      } else if (selectedIndex === 0) {\n        newSelected = newSelected.concat(selected.slice(1));\n      } else if (selectedIndex === selected.length - 1) {\n        newSelected = newSelected.concat(selected.slice(0, -1));\n      } else if (selectedIndex > 0) {\n        newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n      }\n\n      _this3.setState({\n        selected: newSelected\n      });\n    };\n\n    _this3.handleChangePage = function (event, page) {\n      _this3.setState({\n        page: page\n      });\n    };\n\n    _this3.handleChangeRowsPerPage = function (event) {\n      _this3.setState({\n        rowsPerPage: event.target.value\n      });\n    };\n\n    _this3.isSelected = function (id) {\n      return _this3.state.selected.indexOf(id) !== -1;\n    };\n\n    _this3.handleDialogClickOpen = function () {\n      _this3.setState({\n        open: true\n      });\n    };\n\n    _this3.handleDialogClose = function () {\n      _this3.setState({\n        open: false,\n        deleted: false\n      });\n\n      _this3.getUsers();\n    };\n\n    _this3.handleSnackbarClose = function (event, reason) {\n      if (reason === \"clickaway\") {\n        return;\n      }\n\n      _this3.setState({\n        openSnackbar: false\n      });\n    };\n\n    var user = sessionStorage.getItem(\"user\");\n    var userCredentials = JSON.parse(user); //console.log(userCredentials);\n\n    _this3.state = {\n      redirect: false,\n      order: \"asc\",\n      orderBy: \"name\",\n      selected: [],\n      data: [],\n      page: 0,\n      userData: userCredentials,\n      rowsPerPage: 5,\n      loading: true,\n      open: false,\n      _isMounted: false,\n      showPassword: false,\n      openSnackbar: false,\n      messageType: \"\",\n      message: \"\",\n      deleted: false,\n      alertTitle: \"\",\n      alertMessage: \"\",\n      toDelete: \"\",\n      formData: {\n        first_name: \"\",\n        last_name: \"\",\n        email: \"\",\n        username: \"\",\n        password: \"\",\n        role_id: \"\"\n      }\n    };\n    _this3.handleFormChange = _this3.handleFormChange.bind(_assertThisInitialized(_assertThisInitialized(_this3)));\n    _this3.handleFormSubmit = _this3.handleFormSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this3)));\n    _this3.generatePasswordChange = _this3.generatePasswordChange.bind(_assertThisInitialized(_assertThisInitialized(_this3)));\n    _this3.deleteUser = _this3.deleteUser.bind(_assertThisInitialized(_assertThisInitialized(_this3)));\n    _this3.confirmAlert = _this3.confirmAlert.bind(_assertThisInitialized(_assertThisInitialized(_this3)));\n    return _this3;\n  }\n\n  _createClass(Users, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this4 = this;\n\n      if (sessionStorage.getItem(\"user\")) {\n        var user = sessionStorage.getItem(\"user\");\n      } else {\n        this.setState({\n          redirect: true\n        });\n      }\n\n      this.getUsers();\n      GetData(\"roles\", this.state.userData.token).then(function (result) {\n        if (_this4._isMounted) {\n          var reponseJSON = result;\n\n          if (reponseJSON.data) {\n            _this4.setState({\n              roles: reponseJSON.data\n            }); //console.log(reponseJSON.data);\n\n          } else {\n            _this4.setState({\n              loading: false\n            });\n          }\n        }\n      }); // custom rule will have name 'isPasswordMatch'\n      // ValidatorForm.addValidationRule(\"isPasswordMatch\", value => {\n      //   if (value !== this.state.formData.password) {\n      //     return false;\n      //   }\n      //   return true;\n      // });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._isMounted = true;\n      localStorage.setItem(\"pageTitle\", \"User Accounts\");\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    } //Table functions\n\n  }, {\n    key: \"handleFormChange\",\n    value: function handleFormChange(event) {\n      var formData = this.state.formData;\n      formData[event.target.name] = event.target.value;\n      this.setState({\n        formData: formData\n      });\n    }\n  }, {\n    key: \"handleFormSubmit\",\n    value: function handleFormSubmit() {\n      var _this5 = this;\n\n      console.log(JSON.stringify(this.state.formData));\n      PostDataAuth(\"adduser\", this.state.formData, this.state.userData.token).then(function (result) {\n        var reponseJSON = result;\n\n        if (reponseJSON.data) {\n          _this5.setState({\n            formData: {\n              first_name: \"\",\n              last_name: \"\",\n              email: \"\",\n              username: \"\",\n              password: \"\",\n              role_id: \"\"\n            },\n            openSnackbar: true,\n            messageType: \"success\",\n            message: \"User - \" + reponseJSON.data.first_name + \" \" + reponseJSON.data.last_name + \" added successfully\"\n          }); //console.log(reponseJSON.data);\n\n\n          _this5.getUsers();\n        } else {\n          _this5.setState({\n            openSnackbar: true,\n            messageType: \"error\",\n            message: \"User - \" + _this5.state.formData.first_name + \" \" + _this5.state.formData.last_name + \" could not be added. Please try again later...\"\n          });\n        }\n      });\n    }\n  }, {\n    key: \"generatePasswordChange\",\n    value: function generatePasswordChange(e) {\n      var isGenerated = false;\n      var passwordGenerated = {};\n      var formData = this.state.formData;\n      passwordGenerated.passwordGen = generatePassword(8);\n\n      if (passwordGenerated.passwordGen !== \"\") {\n        isGenerated = true;\n      }\n\n      if (isGenerated) {\n        formData[\"password\"] = passwordGenerated.passwordGen;\n        this.setState({\n          formData: formData,\n          isGenerated: isGenerated\n        });\n      } //return isGenerated;\n\n    } //close function for snackbar\n\n  }, {\n    key: \"confirmAlert\",\n    value: function confirmAlert(userDetails) {\n      this.setState({\n        deleted: true,\n        alertTitle: \"Confirm Delete\",\n        alertMessage: \"Are you sure you want to delete \" + userDetails.first_name + \" \" + userDetails.last_name + \"?\",\n        toDelete: userDetails\n      });\n    } //delete user(s)\n\n  }, {\n    key: \"deleteUser\",\n    value: function deleteUser() {\n      var _this6 = this;\n\n      if (this.state.deleted) {\n        DeleteData(\"delete-user/\" + this.state.toDelete.id, this.state.userData.token).then(function (result) {\n          if (_this6._isMounted) {\n            var reponseJSON = result;\n\n            if (reponseJSON.data) {\n              _this6.setState(function (prevState) {\n                return {\n                  data: prevState.data.filter(function (n) {\n                    return n.id !== _this6.state.toDelete.id;\n                  }),\n                  openSnackbar: true,\n                  messageType: \"success\",\n                  message: \"User - \" + reponseJSON.data.first_name + \" \" + reponseJSON.data.last_name + \" deleted successfully\",\n                  deleted: false\n                };\n              });\n            } else {\n              _this6.setState({\n                loading: false\n              });\n\n              _this6.setState({\n                openSnackbar: true,\n                messageType: \"error\",\n                message: \"User - \" + _this6.state.toDelete.first_name + \" \" + _this6.state.toDelete.last_name + \" could not be deleted. Please try again later...\",\n                deleted: false\n              });\n            }\n          }\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this7 = this;\n\n      var classes = this.props.classes;\n      var _this$state = this.state,\n          loading = _this$state.loading,\n          formData = _this$state.formData;\n      var _this$state2 = this.state,\n          data = _this$state2.data,\n          order = _this$state2.order,\n          orderBy = _this$state2.orderBy,\n          selected = _this$state2.selected,\n          rowsPerPage = _this$state2.rowsPerPage,\n          page = _this$state2.page;\n      var emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\n\n      if (this.state.redirect) {\n        return React.createElement(Redirect, {\n          to: \"/admin/login\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 638\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 642\n        },\n        __self: this\n      }, React.createElement(Snackbar, {\n        anchorOrigin: {\n          vertical: \"top\",\n          horizontal: \"center\"\n        },\n        open: this.state.openSnackbar,\n        autoHideDuration: 6000,\n        onClose: this.handleSnackbarClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 643\n        },\n        __self: this\n      }, React.createElement(MySnackbarContentWrapper, {\n        variant: this.state.messageType,\n        className: classes.margin,\n        message: this.state.message,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 652\n        },\n        __self: this\n      })), loading ? React.createElement(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 659\n        },\n        __self: this\n      }) : React.createElement(\"main\", {\n        className: classes.content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 661\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        className: classes.loginContainer,\n        container: true,\n        direction: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 662\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        md: 10,\n        lg: 10,\n        xs: 12,\n        xl: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 663\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        className: classes.loginContainer,\n        container: true,\n        direction: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 664\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        className: classes.breadCrumbs,\n        xs: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 669\n        },\n        __self: this\n      }, React.createElement(Chip, {\n        avatar: React.createElement(Avatar, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 672\n          },\n          __self: this\n        }, React.createElement(Dboard, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 673\n          },\n          __self: this\n        })),\n        label: \"Dashboard\",\n        color: \"primary\",\n        className: classes.chip,\n        component: Link,\n        onClick: function onClick(e) {\n          e.stopPropagation();\n        },\n        to: \"/admin/dashboard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 670\n        },\n        __self: this\n      }), React.createElement(Chip, {\n        avatar: React.createElement(Avatar, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 687\n          },\n          __self: this\n        }, React.createElement(SupervisorAccount, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 688\n          },\n          __self: this\n        })),\n        label: \"User Accounts\",\n        className: classes.chip,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 685\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 2,\n        className: classes.textRight,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 695\n        },\n        __self: this\n      }, React.createElement(Tooltip, {\n        title: \"Add User \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 696\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"fab\",\n        color: \"primary\",\n        \"aria-label\": \"Add\",\n        className: classes.button,\n        onClick: this.handleDialogClickOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 697\n        },\n        __self: this\n      }, React.createElement(AddIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 704\n        },\n        __self: this\n      }))))), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 709\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 710\n        },\n        __self: this\n      }, selected !== null ? React.createElement(EnhancedTableToolbar, {\n        numSelected: selected.length,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 712\n        },\n        __self: this\n      }) : React.createElement(EnhancedTableToolbar, {\n        numSelected: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 714\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: classes.tableWrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 717\n        },\n        __self: this\n      }, React.createElement(Table, {\n        className: classes.table,\n        \"aria-labelledby\": \"tableTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 718\n        },\n        __self: this\n      }, React.createElement(EnhancedTableHead, {\n        numSelected: selected.length,\n        order: order,\n        orderBy: orderBy,\n        onSelectAllClick: this.handleSelectAllClick,\n        onRequestSort: this.handleRequestSort,\n        rowCount: data.length,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 722\n        },\n        __self: this\n      }), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 730\n        },\n        __self: this\n      }, stableSort(data, getSorting(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(function (userdata) {\n        var isSelected = _this7.isSelected(userdata.id);\n\n        return React.createElement(TableRow, {\n          hover: true,\n          key: userdata.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 739\n          },\n          __self: this\n        }, React.createElement(TableCell, {\n          onClick: function onClick(event) {\n            return _this7.handleClick(event, userdata.id);\n          },\n          role: \"checkbox\",\n          \"aria-checked\": isSelected,\n          tabIndex: -1,\n          key: userdata.id,\n          selected: isSelected,\n          padding: \"checkbox\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 740\n          },\n          __self: this\n        }, React.createElement(Checkbox, {\n          checked: isSelected,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 751\n          },\n          __self: this\n        })), React.createElement(TableCell, {\n          component: \"th\",\n          scope: \"row\",\n          padding: \"none\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 753\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/admin/user/\" + userdata.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 758\n          },\n          __self: this\n        }, userdata.first_name + \" \" + userdata.last_name)), React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 764\n          },\n          __self: this\n        }, userdata.email), React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 765\n          },\n          __self: this\n        }, userdata.roles.map(function (role, key) {\n          return React.createElement(Chip, {\n            avatar: React.createElement(Avatar, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 769\n              },\n              __self: this\n            }, React.createElement(PermIdentity, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 770\n              },\n              __self: this\n            })),\n            key: key,\n            label: role.name,\n            color: \"primary\",\n            className: classes.chip,\n            variant: \"outlined\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 767\n            },\n            __self: this\n          });\n        })), React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 781\n          },\n          __self: this\n        }, userdata.status), React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 782\n          },\n          __self: this\n        }, React.createElement(Tooltip, {\n          title: \"View \" + userdata.first_name + \" \" + userdata.last_name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 783\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          color: \"primary\",\n          variant: \"flat\",\n          size: \"small\",\n          className: classes.button,\n          href: \"/admin/user/view/\" + userdata.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 791\n          },\n          __self: this\n        }, React.createElement(Pageview, {\n          className: classNames(classes.leftIcon, classes.iconSmall),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 798\n          },\n          __self: this\n        }))), React.createElement(Tooltip, {\n          title: \"Edit \" + userdata.first_name + \" \" + userdata.last_name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 806\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          color: \"primary\",\n          variant: \"flat\",\n          size: \"small\",\n          className: classes.button,\n          href: \"/admin/user/edit/\" + userdata.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 814\n          },\n          __self: this\n        }, React.createElement(Edit, {\n          className: classNames(classes.leftIcon, classes.iconSmall),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 821\n          },\n          __self: this\n        }))), React.createElement(Tooltip, {\n          title: \"Delete \" + userdata.first_name + \" \" + userdata.last_name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 829\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          color: \"secondary\",\n          variant: \"flat\",\n          size: \"small\",\n          className: classes.button,\n          onClick: function onClick(event) {\n            return _this7.confirmAlert(userdata);\n          } //href={\"/admin/user/\" + n.id}\n          ,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 837\n          },\n          __self: this\n        }, React.createElement(Delete, {\n          className: classNames(classes.leftIcon, classes.iconSmall),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 847\n          },\n          __self: this\n        })))));\n      }), emptyRows > 0 && React.createElement(TableRow, {\n        style: {\n          height: 49 * emptyRows\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 860\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        colSpan: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 861\n        },\n        __self: this\n      }))))), React.createElement(TablePagination, {\n        component: \"div\",\n        count: data.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        backIconButtonProps: {\n          \"aria-label\": \"Previous Page\"\n        },\n        nextIconButtonProps: {\n          \"aria-label\": \"Next Page\"\n        },\n        onChangePage: this.handleChangePage,\n        onChangeRowsPerPage: this.handleChangeRowsPerPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 867\n        },\n        __self: this\n      }))))), React.createElement(Dialog, {\n        open: this.state.open,\n        onClose: this.handleDialogClose,\n        \"aria-labelledby\": \"form-dialog-title\",\n        disableBackdropClick: true,\n        disableEscapeKeyDown: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 899\n        },\n        __self: this\n      }, React.createElement(ValidatorForm, {\n        ref: \"form\",\n        onSubmit: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 906\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"form-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 907\n        },\n        __self: this\n      }, \"+ Add User\"), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 908\n        },\n        __self: this\n      }, React.createElement(DialogContentText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 909\n        },\n        __self: this\n      }, \"Click \\\"Add User\\\" to add user account or cancel to close\"), React.createElement(Grid, {\n        className: classes.loginContainer,\n        container: true,\n        direction: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 912\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        className: classes.padRight,\n        item: true,\n        sm: 12,\n        md: 6,\n        lg: 6,\n        xs: 6,\n        xl: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 917\n        },\n        __self: this\n      }, React.createElement(TextValidator, {\n        autoFocus: true,\n        margin: \"dense\",\n        id: \"first_name\",\n        name: \"first_name\",\n        label: \"First Name\",\n        type: \"text\",\n        onChange: this.handleFormChange,\n        value: formData.first_name,\n        validators: [\"required\"],\n        errorMessages: [\"First Name is required\"],\n        variant: \"filled\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 926\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        className: classes.padLeft,\n        item: true,\n        sm: 12,\n        md: 6,\n        lg: 6,\n        xs: 6,\n        xl: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 941\n        },\n        __self: this\n      }, React.createElement(TextValidator, {\n        margin: \"dense\",\n        id: \"last_name\",\n        name: \"last_name\",\n        label: \"Last Name\",\n        type: \"text\",\n        onChange: this.handleFormChange,\n        value: formData.last_name,\n        validators: [\"required\"],\n        errorMessages: [\"Last Name is required\"],\n        variant: \"filled\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 950\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 964\n        },\n        __self: this\n      }, React.createElement(TextValidator, {\n        margin: \"dense\",\n        id: \"email\",\n        name: \"email\",\n        label: \"Email Address\",\n        type: \"email\",\n        onChange: this.handleFormChange,\n        value: formData.email,\n        validators: [\"required\", \"isEmail\"],\n        errorMessages: [\"Email is required\", \"Email is not valid\"],\n        variant: \"filled\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 965\n        },\n        __self: this\n      }), React.createElement(TextValidator, {\n        margin: \"dense\",\n        id: \"username\",\n        name: \"username\",\n        label: \"Username\",\n        type: \"text\",\n        onChange: this.handleFormChange,\n        value: formData.username,\n        validators: [\"required\"],\n        errorMessages: [\"Username is required\"],\n        variant: \"filled\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 981\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        md: 6,\n        lg: 6,\n        xs: 6,\n        xl: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 995\n        },\n        __self: this\n      }, React.createElement(TextValidator, {\n        margin: \"dense\",\n        id: \"password\",\n        name: \"password\",\n        label: \"Password\",\n        type: this.state.isGenerated ? \"text\" : \"password\",\n        onChange: this.handleFormChange,\n        value: formData.password,\n        validators: [\"required\"],\n        errorMessages: [\"Password is required\"],\n        variant: \"filled\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 996\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        className: classes.buttonMargin,\n        item: true,\n        sm: 12,\n        md: 6,\n        lg: 6,\n        xs: 6,\n        xl: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1010\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"medium\",\n        className: classes.button,\n        onClick: this.generatePasswordChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1019\n        },\n        __self: this\n      }, React.createElement(AutoRenewIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1026\n        },\n        __self: this\n      }), \"Generate\")), React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        md: 9,\n        lg: 9,\n        xs: 9,\n        xl: 9,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1030\n        },\n        __self: this\n      }, React.createElement(SelectValidator, {\n        margin: \"dense\",\n        name: \"role_id\",\n        id: \"role_id\",\n        label: \"User Role\",\n        className: classes.selectWidth,\n        onChange: this.handleFormChange,\n        value: formData.role_id,\n        validators: [\"required\"],\n        errorMessages: [\"Role is required\"],\n        variant: \"filled\",\n        SelectProps: {\n          displayEmpty: true\n        },\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1031\n        },\n        __self: this\n      }, this.state.roles.map(function (role, key) {\n        return React.createElement(MenuItem, {\n          key: key,\n          value: role.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1048\n          },\n          __self: this\n        }, role.name);\n      }))))), React.createElement(DialogActions, {\n        className: classes.dialogAction,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1056\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        size: \"small\",\n        className: classes.button,\n        onClick: this.handleDialogClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1057\n        },\n        __self: this\n      }, React.createElement(CancelIcon, {\n        className: classNames(classes.leftIcon, classes.iconSmall),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1063\n        },\n        __self: this\n      }), \"Cancel\"), React.createElement(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        size: \"small\",\n        color: \"primary\",\n        className: classes.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1071\n        },\n        __self: this\n      }, React.createElement(SaveIcon, {\n        className: classNames(classes.leftIcon, classes.iconSmall),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1078\n        },\n        __self: this\n      }), \"Add User\")))), React.createElement(Dialog, {\n        open: this.state.deleted,\n        onClose: this.handleDialogClose,\n        \"aria-labelledby\": \"alert-dialog-title\",\n        \"aria-describedby\": \"alert-dialog-description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1091\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"alert-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1097\n        },\n        __self: this\n      }, this.state.alertTitle), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1100\n        },\n        __self: this\n      }, React.createElement(DialogContentText, {\n        id: \"alert-dialog-description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1101\n        },\n        __self: this\n      }, this.state.alertMessage)), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1105\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleDialogClose,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1106\n        },\n        __self: this\n      }, \"No\"), React.createElement(Button, {\n        onClick: this.deleteUser,\n        color: \"primary\",\n        autoFocus: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1109\n        },\n        __self: this\n      }, \"Yes\")))));\n    }\n  }]);\n\n  return Users;\n}(Component);\n\nUsers.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles, {\n  withTheme: true\n})(Users);","map":{"version":3,"sources":["/Users/user/Documents/Dev/api-client/src/components/admin/users.jsx"],"names":["React","Component","Redirect","Link","createMuiTheme","PropTypes","Typography","withStyles","classNames","Grid","Button","Paper","Chip","Avatar","SupervisorAccount","Dboard","PermIdentity","Pageview","Edit","Delete","SaveIcon","CancelIcon","Snackbar","MySnackbarContentWrapper","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","TableSortLabel","Toolbar","Checkbox","IconButton","Tooltip","DeleteIcon","FilterListIcon","AddIcon","AutoRenewIcon","lighten","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","FilledInput","InputLabel","MenuItem","ValidatorForm","TextValidator","SelectValidator","GetData","PostData","PostDataAuth","DeleteData","generatePassword","Loader","CustomTableCell","theme","head","backgroundColor","fontWeight","color","body","fontSize","styles","root","width","marginTop","spacing","unit","content","flexGrow","padding","paper","palette","text","secondary","toolbar","display","alignItems","justifyContent","mixins","textRight","textAlign","breadCrumbs","marginBottom","update","chip","marginRight","table","minWidth","tableWrapper","overflowX","dialogAction","margin","padRight","paddingRight","padLeft","paddingLeft","buttonMargin","typography","useNextVariants","desc","a","b","orderBy","stableSort","array","cmp","stabilizedThis","map","el","index","sort","order","getSorting","confirmAlertSelected","console","log","rows","id","string","disablePadding","label","EnhancedTableHead","createSortHandler","property","event","props","onRequestSort","onSelectAllClick","numSelected","rowCount","row","propTypes","number","isRequired","func","toolbarStyles","highlight","type","main","light","primary","dark","spacer","flex","actions","title","EnhancedTableToolbar","classes","tableTitle","object","Users","state","handleRequestSort","setState","getUsers","userData","token","then","result","_isMounted","reponseJSON","data","filter","n","loading","handleSelectAllClick","target","checked","selected","handleClick","selectedIndex","indexOf","newSelected","concat","slice","length","handleChangePage","page","handleChangeRowsPerPage","rowsPerPage","value","isSelected","handleDialogClickOpen","open","handleDialogClose","deleted","handleSnackbarClose","reason","openSnackbar","user","sessionStorage","getItem","userCredentials","JSON","parse","redirect","showPassword","messageType","message","alertTitle","alertMessage","toDelete","formData","first_name","last_name","email","username","password","role_id","handleFormChange","bind","handleFormSubmit","generatePasswordChange","deleteUser","confirmAlert","roles","localStorage","setItem","name","stringify","e","isGenerated","passwordGenerated","passwordGen","userDetails","prevState","emptyRows","Math","min","vertical","horizontal","loginContainer","stopPropagation","button","userdata","role","key","status","leftIcon","iconSmall","height","selectWidth","displayEmpty","withTheme"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport classNames from \"classnames\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport SupervisorAccount from \"@material-ui/icons/SupervisorAccount\";\nimport Dboard from \"@material-ui/icons/Dashboard\";\nimport PermIdentity from \"@material-ui/icons/PermIdentity\";\nimport Pageview from \"@material-ui/icons/PageviewOutlined\";\nimport Edit from \"@material-ui/icons/EditOutlined\";\nimport Delete from \"@material-ui/icons/DeleteOutlined\";\nimport SaveIcon from \"@material-ui/icons/SaveOutlined\";\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { MySnackbarContentWrapper } from \"../../helpers/snackbar.helper\";\n\n//Table Imports\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport DeleteIcon from \"@material-ui/icons/DeleteOutlined\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport AutoRenewIcon from \"@material-ui/icons/AutorenewOutlined\";\nimport { lighten } from \"@material-ui/core/styles/colorManipulator\";\n\n//Form dialog imports\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport FilledInput from \"@material-ui/core/FilledInput\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\n//Form validation imports\nimport {\n  ValidatorForm,\n  TextValidator,\n  SelectValidator\n} from \"react-material-ui-form-validator\";\n\n//Get data import\nimport { GetData } from \"../../services/GetData\";\nimport { PostData } from \"../../services/PostData\";\nimport { PostDataAuth } from \"../../services/PostDataAuth\";\nimport { DeleteData } from \"../../services/DeleteData\";\nimport { generatePassword } from \"../../helpers/password.generator\";\n\n//Loader import\nimport Loader from \"../Loader\";\n\n//CSS for custom header cell\nconst CustomTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: \"#f2f4f9\",\n    fontWeight: 600,\n    color: \"#555555\" //theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\n\n//General styles\nconst styles = theme => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing.unit * 3\n  },\n  content: {\n    flexGrow: 1,\n    padding: \"6rem 1.5rem\"\n  },\n  paper: {\n    padding: theme.spacing.unit * 4,\n    color: theme.palette.text.secondary\n  },\n  toolbar: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar\n  },\n  textRight: {\n    textAlign: \"right\"\n  },\n  breadCrumbs: {\n    marginBottom: \"1rem\"\n  },\n  update: {\n    padding: \"0rem 2rem\"\n  },\n  chip: {\n    marginRight: theme.spacing.unit\n  },\n  table: {\n    minWidth: 1020\n  },\n  tableWrapper: {\n    overflowX: \"auto\"\n  },\n  dialogAction: {\n    padding: \"0 20px 20px\",\n    margin: \"14px 0 0\"\n  },\n  padRight: {\n    paddingRight: \"0.35rem\"\n  },\n  padLeft: {\n    paddingLeft: \"0.35rem\"\n  },\n  buttonMargin: {\n    margin: \"0.7rem 0 0\",\n    paddingLeft: \"0.8rem\"\n  }\n  //   button: {\n  //     minWidth: \"32px\"\n  //   }\n});\n\ncreateMuiTheme({\n  typography: {\n    useNextVariants: true\n  }\n});\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => desc(a, b, orderBy)\n    : (a, b) => -desc(a, b, orderBy);\n}\n\nfunction confirmAlertSelected() {\n  // this.setState({\n  //   deleted: true,\n  //   alertTitle: \"Confirm Delete\",\n  //   alertMessage: \"Are you sure you want to delete selected user accounts?\",\n  //   toDelete: this.state.selected\n  // });\n\n  console.log(\"yes\");\n}\n\nconst rows = [\n  {\n    id: \"first_name\",\n    string: true,\n    disablePadding: true,\n    label: \"Name\"\n  },\n  { id: \"email\", string: true, disablePadding: false, label: \"Email\" },\n  { id: \"roles\", string: true, disablePadding: false, label: \"Role\" },\n  { id: \"status\", string: true, disablePadding: false, label: \"Status\" },\n  { id: \"action\", string: true, disablePadding: false, label: \"Action\" }\n];\n\nclass EnhancedTableHead extends React.Component {\n  createSortHandler = property => event => {\n    this.props.onRequestSort(event, property);\n  };\n\n  render() {\n    const {\n      onSelectAllClick,\n      order,\n      orderBy,\n      numSelected,\n      rowCount\n    } = this.props;\n\n    return (\n      <TableHead>\n        <TableRow>\n          <CustomTableCell padding=\"checkbox\">\n            <Checkbox\n              indeterminate={numSelected > 0 && numSelected < rowCount}\n              checked={numSelected === rowCount}\n              onChange={onSelectAllClick}\n            />\n          </CustomTableCell>\n          {rows.map(row => {\n            return (\n              <CustomTableCell\n                key={row.id}\n                padding={row.disablePadding ? \"none\" : \"default\"}\n                sortDirection={orderBy === row.id ? order : false}\n              >\n                <Tooltip\n                  title=\"Sort\"\n                  placement={row.string ? \"bottom-end\" : \"bottom-start\"}\n                  enterDelay={300}\n                >\n                  <TableSortLabel\n                    active={orderBy === row.id}\n                    direction={order}\n                    onClick={this.createSortHandler(row.id)}\n                  >\n                    {row.label}\n                  </TableSortLabel>\n                </Tooltip>\n              </CustomTableCell>\n            );\n          }, this)}\n        </TableRow>\n      </TableHead>\n    );\n  }\n}\n\nEnhancedTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.string.isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\n\nconst toolbarStyles = theme => ({\n  root: {\n    paddingRight: theme.spacing.unit\n  },\n  highlight:\n    theme.palette.type === \"light\"\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark\n        },\n  spacer: {\n    flex: \"1 1 100%\"\n  },\n  actions: {\n    color: theme.palette.text.secondary\n  },\n  title: {\n    flex: \"0 0 auto\"\n  }\n});\n\nlet EnhancedTableToolbar = props => {\n  const { numSelected, classes } = props;\n\n  return (\n    <Toolbar\n      className={classNames(classes.root, {\n        [classes.highlight]: numSelected > 0\n      })}\n    >\n      <div className={classes.title}>\n        {numSelected > 0 ? (\n          <Typography color=\"inherit\" variant=\"subtitle1\">\n            {numSelected} selected\n          </Typography>\n        ) : (\n          <Typography variant=\"h6\" id=\"tableTitle\">\n            {tableTitle}\n          </Typography>\n        )}\n      </div>\n      <div className={classes.spacer} />\n      <div className={classes.actions}>\n        {numSelected > 0 ? (\n          <Tooltip title=\"Delete\">\n            <IconButton onClick={confirmAlertSelected} aria-label=\"Delete\">\n              <DeleteIcon />\n            </IconButton>\n          </Tooltip>\n        ) : (\n          <Tooltip title=\"Filter list\">\n            <IconButton aria-label=\"Filter list\">\n              <FilterListIcon />\n            </IconButton>\n          </Tooltip>\n        )}\n      </div>\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired\n};\n\nEnhancedTableToolbar = withStyles(toolbarStyles)(EnhancedTableToolbar);\n\nconst tableTitle = \"Users\";\n\nclass Users extends Component {\n  state = {};\n\n  constructor(props) {\n    super(props);\n    let user = sessionStorage.getItem(\"user\");\n    const userCredentials = JSON.parse(user);\n    //console.log(userCredentials);\n\n    this.state = {\n      redirect: false,\n      order: \"asc\",\n      orderBy: \"name\",\n      selected: [],\n      data: [],\n      page: 0,\n      userData: userCredentials,\n      rowsPerPage: 5,\n      loading: true,\n      open: false,\n      _isMounted: false,\n      showPassword: false,\n      openSnackbar: false,\n      messageType: \"\",\n      message: \"\",\n      deleted: false,\n      alertTitle: \"\",\n      alertMessage: \"\",\n      toDelete: \"\",\n      formData: {\n        first_name: \"\",\n        last_name: \"\",\n        email: \"\",\n        username: \"\",\n        password: \"\",\n        role_id: \"\"\n      }\n    };\n\n    this.handleFormChange = this.handleFormChange.bind(this);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.generatePasswordChange = this.generatePasswordChange.bind(this);\n    this.deleteUser = this.deleteUser.bind(this);\n    this.confirmAlert = this.confirmAlert.bind(this);\n  }\n\n  componentWillMount() {\n    if (sessionStorage.getItem(\"user\")) {\n      let user = sessionStorage.getItem(\"user\");\n    } else {\n      this.setState({ redirect: true });\n    }\n\n    this.getUsers();\n\n    GetData(\"roles\", this.state.userData.token).then(result => {\n      if (this._isMounted) {\n        let reponseJSON = result;\n        if (reponseJSON.data) {\n          this.setState({ roles: reponseJSON.data });\n          //console.log(reponseJSON.data);\n        } else {\n          this.setState({ loading: false });\n        }\n      }\n    });\n\n    // custom rule will have name 'isPasswordMatch'\n    // ValidatorForm.addValidationRule(\"isPasswordMatch\", value => {\n    //   if (value !== this.state.formData.password) {\n    //     return false;\n    //   }\n    //   return true;\n    // });\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    localStorage.setItem(\"pageTitle\", \"User Accounts\");\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  //Table functions\n  handleRequestSort = (event, property) => {\n    const orderBy = property;\n    let order = \"desc\";\n\n    if (this.state.orderBy === property && this.state.order === \"desc\") {\n      order = \"asc\";\n    }\n\n    this.setState({ order, orderBy });\n  };\n\n  getUsers = () => {\n    GetData(\"users\", this.state.userData.token).then(result => {\n      if (this._isMounted) {\n        let reponseJSON = result;\n        if (reponseJSON.data) {\n          this.setState({\n            data: reponseJSON.data.filter(n => n.id !== this.state.userData.id),\n            loading: false\n          });\n          //console.log(reponseJSON.data);\n        } else {\n          this.setState({ loading: false });\n        }\n      }\n    });\n  };\n\n  handleSelectAllClick = event => {\n    if (event.target.checked) {\n      this.setState(state => ({ selected: state.data.map(n => n.id) }));\n      return;\n    }\n    this.setState({ selected: [] });\n  };\n\n  handleClick = (event, id) => {\n    const { selected } = this.state;\n    const selectedIndex = selected.indexOf(id);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, id);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    this.setState({ selected: newSelected });\n  };\n\n  handleChangePage = (event, page) => {\n    this.setState({ page });\n  };\n\n  handleChangeRowsPerPage = event => {\n    this.setState({ rowsPerPage: event.target.value });\n  };\n\n  isSelected = id => this.state.selected.indexOf(id) !== -1;\n\n  //Form dialog functions\n  handleDialogClickOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleDialogClose = () => {\n    this.setState({ open: false, deleted: false });\n    this.getUsers();\n  };\n\n  handleFormChange(event) {\n    const { formData } = this.state;\n    formData[event.target.name] = event.target.value;\n    this.setState({ formData });\n  }\n\n  handleFormSubmit() {\n    console.log(JSON.stringify(this.state.formData));\n    PostDataAuth(\n      \"adduser\",\n      this.state.formData,\n      this.state.userData.token\n    ).then(result => {\n      let reponseJSON = result;\n      if (reponseJSON.data) {\n        this.setState({\n          formData: {\n            first_name: \"\",\n            last_name: \"\",\n            email: \"\",\n            username: \"\",\n            password: \"\",\n            role_id: \"\"\n          },\n          openSnackbar: true,\n          messageType: \"success\",\n          message:\n            \"User - \" +\n            reponseJSON.data.first_name +\n            \" \" +\n            reponseJSON.data.last_name +\n            \" added successfully\"\n        });\n\n        //console.log(reponseJSON.data);\n        this.getUsers();\n      } else {\n        this.setState({\n          openSnackbar: true,\n          messageType: \"error\",\n          message:\n            \"User - \" +\n            this.state.formData.first_name +\n            \" \" +\n            this.state.formData.last_name +\n            \" could not be added. Please try again later...\"\n        });\n      }\n    });\n  }\n\n  generatePasswordChange(e) {\n    let isGenerated = false;\n    const passwordGenerated = {};\n    const { formData } = this.state;\n\n    passwordGenerated.passwordGen = generatePassword(8);\n\n    if (passwordGenerated.passwordGen !== \"\") {\n      isGenerated = true;\n    }\n\n    if (isGenerated) {\n      formData[\"password\"] = passwordGenerated.passwordGen;\n      this.setState({ formData, isGenerated });\n    }\n\n    //return isGenerated;\n  }\n\n  //close function for snackbar\n  handleSnackbarClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    this.setState({ openSnackbar: false });\n  };\n\n  confirmAlert(userDetails) {\n    this.setState({\n      deleted: true,\n      alertTitle: \"Confirm Delete\",\n      alertMessage:\n        \"Are you sure you want to delete \" +\n        userDetails.first_name +\n        \" \" +\n        userDetails.last_name +\n        \"?\",\n      toDelete: userDetails\n    });\n  }\n\n  //delete user(s)\n  deleteUser() {\n    if (this.state.deleted) {\n      DeleteData(\n        \"delete-user/\" + this.state.toDelete.id,\n        this.state.userData.token\n      ).then(result => {\n        if (this._isMounted) {\n          let reponseJSON = result;\n          if (reponseJSON.data) {\n            this.setState(prevState => ({\n              data: prevState.data.filter(n => n.id !== this.state.toDelete.id),\n              openSnackbar: true,\n              messageType: \"success\",\n              message:\n                \"User - \" +\n                reponseJSON.data.first_name +\n                \" \" +\n                reponseJSON.data.last_name +\n                \" deleted successfully\",\n              deleted: false\n            }));\n          } else {\n            this.setState({ loading: false });\n            this.setState({\n              openSnackbar: true,\n              messageType: \"error\",\n              message:\n                \"User - \" +\n                this.state.toDelete.first_name +\n                \" \" +\n                this.state.toDelete.last_name +\n                \" could not be deleted. Please try again later...\",\n              deleted: false\n            });\n          }\n        }\n      });\n    }\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { loading, formData } = this.state;\n    const { data, order, orderBy, selected, rowsPerPage, page } = this.state;\n    const emptyRows =\n      rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\n\n    if (this.state.redirect) {\n      return <Redirect to=\"/admin/login\" />;\n    }\n\n    return (\n      <div>\n        <Snackbar\n          anchorOrigin={{\n            vertical: \"top\",\n            horizontal: \"center\"\n          }}\n          open={this.state.openSnackbar}\n          autoHideDuration={6000}\n          onClose={this.handleSnackbarClose}\n        >\n          <MySnackbarContentWrapper\n            variant={this.state.messageType}\n            className={classes.margin}\n            message={this.state.message}\n          />\n        </Snackbar>\n        {loading ? (\n          <Loader />\n        ) : (\n          <main className={classes.content}>\n            <Grid className={classes.loginContainer} container direction=\"row\">\n              <Grid item sm={12} md={10} lg={10} xs={12} xl={10}>\n                <Grid\n                  className={classes.loginContainer}\n                  container\n                  direction=\"row\"\n                >\n                  <Grid item className={classes.breadCrumbs} xs={10}>\n                    <Chip\n                      avatar={\n                        <Avatar>\n                          <Dboard />\n                        </Avatar>\n                      }\n                      label=\"Dashboard\"\n                      color=\"primary\"\n                      className={classes.chip}\n                      component={Link}\n                      onClick={e => {\n                        e.stopPropagation();\n                      }}\n                      to={\"/admin/dashboard\"}\n                    />\n                    <Chip\n                      avatar={\n                        <Avatar>\n                          <SupervisorAccount />\n                        </Avatar>\n                      }\n                      label=\"User Accounts\"\n                      className={classes.chip}\n                    />\n                  </Grid>\n                  <Grid item xs={2} className={classes.textRight}>\n                    <Tooltip title={\"Add User \"}>\n                      <Button\n                        variant=\"fab\"\n                        color=\"primary\"\n                        aria-label=\"Add\"\n                        className={classes.button}\n                        onClick={this.handleDialogClickOpen}\n                      >\n                        <AddIcon />\n                      </Button>\n                    </Tooltip>\n                  </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                  <Paper className={classes.root}>\n                    {selected !== null ? (\n                      <EnhancedTableToolbar numSelected={selected.length} />\n                    ) : (\n                      <EnhancedTableToolbar numSelected={0} />\n                    )}\n\n                    <div className={classes.tableWrapper}>\n                      <Table\n                        className={classes.table}\n                        aria-labelledby=\"tableTitle\"\n                      >\n                        <EnhancedTableHead\n                          numSelected={selected.length}\n                          order={order}\n                          orderBy={orderBy}\n                          onSelectAllClick={this.handleSelectAllClick}\n                          onRequestSort={this.handleRequestSort}\n                          rowCount={data.length}\n                        />\n                        <TableBody>\n                          {stableSort(data, getSorting(order, orderBy))\n                            .slice(\n                              page * rowsPerPage,\n                              page * rowsPerPage + rowsPerPage\n                            )\n                            .map(userdata => {\n                              const isSelected = this.isSelected(userdata.id);\n                              return (\n                                <TableRow hover key={userdata.id}>\n                                  <TableCell\n                                    onClick={event =>\n                                      this.handleClick(event, userdata.id)\n                                    }\n                                    role=\"checkbox\"\n                                    aria-checked={isSelected}\n                                    tabIndex={-1}\n                                    key={userdata.id}\n                                    selected={isSelected}\n                                    padding=\"checkbox\"\n                                  >\n                                    <Checkbox checked={isSelected} />\n                                  </TableCell>\n                                  <TableCell\n                                    component=\"th\"\n                                    scope=\"row\"\n                                    padding=\"none\"\n                                  >\n                                    <Link to={\"/admin/user/\" + userdata.id}>\n                                      {userdata.first_name +\n                                        \" \" +\n                                        userdata.last_name}\n                                    </Link>\n                                  </TableCell>\n                                  <TableCell>{userdata.email}</TableCell>\n                                  <TableCell>\n                                    {userdata.roles.map((role, key) => (\n                                      <Chip\n                                        avatar={\n                                          <Avatar>\n                                            <PermIdentity />\n                                          </Avatar>\n                                        }\n                                        key={key}\n                                        label={role.name}\n                                        color=\"primary\"\n                                        className={classes.chip}\n                                        variant=\"outlined\"\n                                      />\n                                    ))}\n                                  </TableCell>\n                                  <TableCell>{userdata.status}</TableCell>\n                                  <TableCell>\n                                    <Tooltip\n                                      title={\n                                        \"View \" +\n                                        userdata.first_name +\n                                        \" \" +\n                                        userdata.last_name\n                                      }\n                                    >\n                                      <IconButton\n                                        color=\"primary\"\n                                        variant=\"flat\"\n                                        size=\"small\"\n                                        className={classes.button}\n                                        href={\"/admin/user/view/\" + userdata.id}\n                                      >\n                                        <Pageview\n                                          className={classNames(\n                                            classes.leftIcon,\n                                            classes.iconSmall\n                                          )}\n                                        />\n                                      </IconButton>\n                                    </Tooltip>\n                                    <Tooltip\n                                      title={\n                                        \"Edit \" +\n                                        userdata.first_name +\n                                        \" \" +\n                                        userdata.last_name\n                                      }\n                                    >\n                                      <IconButton\n                                        color=\"primary\"\n                                        variant=\"flat\"\n                                        size=\"small\"\n                                        className={classes.button}\n                                        href={\"/admin/user/edit/\" + userdata.id}\n                                      >\n                                        <Edit\n                                          className={classNames(\n                                            classes.leftIcon,\n                                            classes.iconSmall\n                                          )}\n                                        />\n                                      </IconButton>\n                                    </Tooltip>\n                                    <Tooltip\n                                      title={\n                                        \"Delete \" +\n                                        userdata.first_name +\n                                        \" \" +\n                                        userdata.last_name\n                                      }\n                                    >\n                                      <IconButton\n                                        color=\"secondary\"\n                                        variant=\"flat\"\n                                        size=\"small\"\n                                        className={classes.button}\n                                        onClick={event =>\n                                          this.confirmAlert(userdata)\n                                        }\n                                        //href={\"/admin/user/\" + n.id}\n                                      >\n                                        <Delete\n                                          className={classNames(\n                                            classes.leftIcon,\n                                            classes.iconSmall\n                                          )}\n                                        />\n                                      </IconButton>\n                                    </Tooltip>\n                                  </TableCell>\n                                </TableRow>\n                              );\n                            })}\n                          {emptyRows > 0 && (\n                            <TableRow style={{ height: 49 * emptyRows }}>\n                              <TableCell colSpan={6} />\n                            </TableRow>\n                          )}\n                        </TableBody>\n                      </Table>\n                    </div>\n                    <TablePagination\n                      component=\"div\"\n                      count={data.length}\n                      rowsPerPage={rowsPerPage}\n                      page={page}\n                      backIconButtonProps={{\n                        \"aria-label\": \"Previous Page\"\n                      }}\n                      nextIconButtonProps={{\n                        \"aria-label\": \"Next Page\"\n                      }}\n                      onChangePage={this.handleChangePage}\n                      onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                    />\n                  </Paper>\n                </Grid>\n              </Grid>\n              {/* <Grid\n              className={classes.update}\n              item\n              sm={12}\n              md={3}\n              lg={3}\n              xs={12}\n              xl={3}\n            >\n              <Typography variant=\"h6\" component=\"h5\">\n                Updates\n              </Typography>\n            </Grid> */}\n            </Grid>\n            {/*Form dialog*/}\n            <Dialog\n              open={this.state.open}\n              onClose={this.handleDialogClose}\n              aria-labelledby=\"form-dialog-title\"\n              disableBackdropClick={true}\n              disableEscapeKeyDown={true}\n            >\n              <ValidatorForm ref=\"form\" onSubmit={this.handleFormSubmit}>\n                <DialogTitle id=\"form-dialog-title\">+ Add User</DialogTitle>\n                <DialogContent>\n                  <DialogContentText>\n                    Click \"Add User\" to add user account or cancel to close\n                  </DialogContentText>\n                  <Grid\n                    className={classes.loginContainer}\n                    container\n                    direction=\"row\"\n                  >\n                    <Grid\n                      className={classes.padRight}\n                      item\n                      sm={12}\n                      md={6}\n                      lg={6}\n                      xs={6}\n                      xl={6}\n                    >\n                      <TextValidator\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"first_name\"\n                        name=\"first_name\"\n                        label=\"First Name\"\n                        type=\"text\"\n                        onChange={this.handleFormChange}\n                        value={formData.first_name}\n                        validators={[\"required\"]}\n                        errorMessages={[\"First Name is required\"]}\n                        variant=\"filled\"\n                        fullWidth\n                      />\n                    </Grid>\n                    <Grid\n                      className={classes.padLeft}\n                      item\n                      sm={12}\n                      md={6}\n                      lg={6}\n                      xs={6}\n                      xl={6}\n                    >\n                      <TextValidator\n                        margin=\"dense\"\n                        id=\"last_name\"\n                        name=\"last_name\"\n                        label=\"Last Name\"\n                        type=\"text\"\n                        onChange={this.handleFormChange}\n                        value={formData.last_name}\n                        validators={[\"required\"]}\n                        errorMessages={[\"Last Name is required\"]}\n                        variant=\"filled\"\n                        fullWidth\n                      />\n                    </Grid>\n                    <Grid item sm={12}>\n                      <TextValidator\n                        margin=\"dense\"\n                        id=\"email\"\n                        name=\"email\"\n                        label=\"Email Address\"\n                        type=\"email\"\n                        onChange={this.handleFormChange}\n                        value={formData.email}\n                        validators={[\"required\", \"isEmail\"]}\n                        errorMessages={[\n                          \"Email is required\",\n                          \"Email is not valid\"\n                        ]}\n                        variant=\"filled\"\n                        fullWidth\n                      />\n                      <TextValidator\n                        margin=\"dense\"\n                        id=\"username\"\n                        name=\"username\"\n                        label=\"Username\"\n                        type=\"text\"\n                        onChange={this.handleFormChange}\n                        value={formData.username}\n                        validators={[\"required\"]}\n                        errorMessages={[\"Username is required\"]}\n                        variant=\"filled\"\n                        fullWidth\n                      />\n                    </Grid>\n                    <Grid item sm={12} md={6} lg={6} xs={6} xl={6}>\n                      <TextValidator\n                        margin=\"dense\"\n                        id=\"password\"\n                        name=\"password\"\n                        label=\"Password\"\n                        type={this.state.isGenerated ? \"text\" : \"password\"}\n                        onChange={this.handleFormChange}\n                        value={formData.password}\n                        validators={[\"required\"]}\n                        errorMessages={[\"Password is required\"]}\n                        variant=\"filled\"\n                        fullWidth\n                      />\n                    </Grid>\n                    <Grid\n                      className={classes.buttonMargin}\n                      item\n                      sm={12}\n                      md={6}\n                      lg={6}\n                      xs={6}\n                      xl={6}\n                    >\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        size=\"medium\"\n                        className={classes.button}\n                        onClick={this.generatePasswordChange}\n                      >\n                        <AutoRenewIcon />\n                        Generate\n                      </Button>\n                    </Grid>\n                    <Grid item sm={12} md={9} lg={9} xs={9} xl={9}>\n                      <SelectValidator\n                        margin=\"dense\"\n                        name=\"role_id\"\n                        id=\"role_id\"\n                        label=\"User Role\"\n                        className={classes.selectWidth}\n                        onChange={this.handleFormChange}\n                        value={formData.role_id}\n                        validators={[\"required\"]}\n                        errorMessages={[\"Role is required\"]}\n                        variant=\"filled\"\n                        SelectProps={{\n                          displayEmpty: true\n                        }}\n                        fullWidth\n                      >\n                        {this.state.roles.map((role, key) => (\n                          <MenuItem key={key} value={role.id}>\n                            {role.name}\n                          </MenuItem>\n                        ))}\n                      </SelectValidator>\n                    </Grid>\n                  </Grid>\n                </DialogContent>\n                <DialogActions className={classes.dialogAction}>\n                  <Button\n                    variant=\"contained\"\n                    size=\"small\"\n                    className={classes.button}\n                    onClick={this.handleDialogClose}\n                  >\n                    <CancelIcon\n                      className={classNames(\n                        classes.leftIcon,\n                        classes.iconSmall\n                      )}\n                    />\n                    Cancel\n                  </Button>\n                  <Button\n                    type=\"submit\"\n                    variant=\"contained\"\n                    size=\"small\"\n                    color=\"primary\"\n                    className={classes.button}\n                  >\n                    <SaveIcon\n                      className={classNames(\n                        classes.leftIcon,\n                        classes.iconSmall\n                      )}\n                    />\n                    Add User\n                  </Button>\n                </DialogActions>\n              </ValidatorForm>\n            </Dialog>\n\n            {/**Alert dialog*/}\n            <Dialog\n              open={this.state.deleted}\n              onClose={this.handleDialogClose}\n              aria-labelledby=\"alert-dialog-title\"\n              aria-describedby=\"alert-dialog-description\"\n            >\n              <DialogTitle id=\"alert-dialog-title\">\n                {this.state.alertTitle}\n              </DialogTitle>\n              <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                  {this.state.alertMessage}\n                </DialogContentText>\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={this.handleDialogClose} color=\"primary\">\n                  No\n                </Button>\n                <Button onClick={this.deleteUser} color=\"primary\" autoFocus>\n                  Yes\n                </Button>\n              </DialogActions>\n            </Dialog>\n          </main>\n        )}\n      </div>\n    );\n  }\n}\n\nUsers.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(Users);\n"]},"metadata":{},"sourceType":"module"}