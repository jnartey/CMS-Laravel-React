{"ast":null,"code":"import _defineProperty from \"/Users/user/Documents/Dev/api-client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/user/Documents/Dev/api-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/user/Documents/Dev/api-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/user/Documents/Dev/api-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/user/Documents/Dev/api-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/user/Documents/Dev/api-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _objectSpread from \"/Users/user/Documents/Dev/api-client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/user/Documents/Dev/api-client/src/components/admin/users.jsx\";\nimport React, { Component } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport classNames from \"classnames\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport SupervisorAccount from \"@material-ui/icons/SupervisorAccount\";\nimport Dboard from \"@material-ui/icons/Dashboard\";\nimport PermIdentity from \"@material-ui/icons/PermIdentity\";\nimport Pageview from \"@material-ui/icons/PageviewOutlined\";\nimport Edit from \"@material-ui/icons/EditOutlined\";\nimport Delete from \"@material-ui/icons/DeleteOutlined\";\nimport SaveIcon from \"@material-ui/icons/SaveOutlined\"; //Table Imports\n\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport DeleteIcon from \"@material-ui/icons/DeleteOutlined\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { lighten } from \"@material-ui/core/styles/colorManipulator\"; //Form dialog imports\n\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\"; //Get data import\n\nimport { GetData } from \"../../services/GetData\"; //Loader import\n\nimport Loader from \"../Loader\"; //CSS for custom header cell\n\nvar CustomTableCell = withStyles(function (theme) {\n  return {\n    head: {\n      backgroundColor: \"#f2f4f9\",\n      fontWeight: 600,\n      color: \"#555555\" //theme.palette.common.white\n\n    },\n    body: {\n      fontSize: 14\n    }\n  };\n})(TableCell); //General styles\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      width: \"100%\",\n      marginTop: theme.spacing.unit * 3\n    },\n    content: {\n      flexGrow: 1,\n      padding: \"6rem 1.5rem\"\n    },\n    paper: {\n      padding: theme.spacing.unit * 4,\n      color: theme.palette.text.secondary\n    },\n    toolbar: _objectSpread({\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-end\",\n      padding: \"0 8px\"\n    }, theme.mixins.toolbar),\n    textRight: {\n      textAlign: \"right\"\n    },\n    breadCrumbs: {\n      marginBottom: \"1rem\"\n    },\n    update: {\n      padding: \"0rem 2rem\"\n    },\n    chip: {\n      marginRight: theme.spacing.unit\n    },\n    table: {\n      minWidth: 1020\n    },\n    tableWrapper: {\n      overflowX: \"auto\"\n    },\n    button: {\n      minWidth: \"32px\"\n    }\n  };\n};\n\ncreateMuiTheme({\n  typography: {\n    useNextVariants: true\n  }\n});\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  var stabilizedThis = array.map(function (el, index) {\n    return [el, index];\n  });\n  stabilizedThis.sort(function (a, b) {\n    var order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(function (el) {\n    return el[0];\n  });\n}\n\nfunction getSorting(order, orderBy) {\n  return order === \"desc\" ? function (a, b) {\n    return desc(a, b, orderBy);\n  } : function (a, b) {\n    return -desc(a, b, orderBy);\n  };\n}\n\nvar rows = [{\n  id: \"name\",\n  string: true,\n  disablePadding: true,\n  label: \"Name\"\n}, {\n  id: \"email\",\n  string: true,\n  disablePadding: false,\n  label: \"Email\"\n}, {\n  id: \"role\",\n  string: true,\n  disablePadding: false,\n  label: \"Role\"\n}, {\n  id: \"status\",\n  string: true,\n  disablePadding: false,\n  label: \"Status\"\n}, {\n  id: \"action\",\n  string: true,\n  disablePadding: false,\n  label: \"Action\"\n}];\n\nvar EnhancedTableHead =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EnhancedTableHead, _React$Component);\n\n  function EnhancedTableHead() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EnhancedTableHead);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EnhancedTableHead)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.createSortHandler = function (property) {\n      return function (event) {\n        _this.props.onRequestSort(event, property);\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(EnhancedTableHead, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          onSelectAllClick = _this$props.onSelectAllClick,\n          order = _this$props.order,\n          orderBy = _this$props.orderBy,\n          numSelected = _this$props.numSelected,\n          rowCount = _this$props.rowCount;\n      return React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(CustomTableCell, {\n        padding: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        indeterminate: numSelected > 0 && numSelected < rowCount,\n        checked: numSelected === rowCount,\n        onChange: onSelectAllClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      })), rows.map(function (row) {\n        return React.createElement(CustomTableCell, {\n          key: row.id,\n          padding: row.disablePadding ? \"none\" : \"default\",\n          sortDirection: orderBy === row.id ? order : false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180\n          },\n          __self: this\n        }, React.createElement(Tooltip, {\n          title: \"Sort\",\n          placement: row.string ? \"bottom-end\" : \"bottom-start\",\n          enterDelay: 300,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        }, React.createElement(TableSortLabel, {\n          active: orderBy === row.id,\n          direction: order,\n          onClick: _this2.createSortHandler(row.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        }, row.label)));\n      }, this)));\n    }\n  }]);\n\n  return EnhancedTableHead;\n}(React.Component);\n\nEnhancedTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.string.isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\n\nvar toolbarStyles = function toolbarStyles(theme) {\n  return {\n    root: {\n      paddingRight: theme.spacing.unit\n    },\n    highlight: theme.palette.type === \"light\" ? {\n      color: theme.palette.secondary.main,\n      backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n    } : {\n      color: theme.palette.text.primary,\n      backgroundColor: theme.palette.secondary.dark\n    },\n    spacer: {\n      flex: \"1 1 100%\"\n    },\n    actions: {\n      color: theme.palette.text.secondary\n    },\n    title: {\n      flex: \"0 0 auto\"\n    }\n  };\n};\n\nvar EnhancedTableToolbar = function EnhancedTableToolbar(props) {\n  var numSelected = props.numSelected,\n      classes = props.classes;\n  return React.createElement(Toolbar, {\n    className: classNames(classes.root, _defineProperty({}, classes.highlight, numSelected > 0)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250\n    },\n    __self: this\n  }, numSelected > 0 ? React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"subtitle1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252\n    },\n    __self: this\n  }, numSelected, \" selected\") : React.createElement(Typography, {\n    variant: \"h6\",\n    id: \"tableTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256\n    },\n    __self: this\n  }, tableTitle)), React.createElement(\"div\", {\n    className: classes.spacer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.actions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262\n    },\n    __self: this\n  }, numSelected > 0 ? React.createElement(Tooltip, {\n    title: \"Delete\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    \"aria-label\": \"Delete\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265\n    },\n    __self: this\n  }, React.createElement(DeleteIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266\n    },\n    __self: this\n  }))) : React.createElement(Tooltip, {\n    title: \"Filter list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    \"aria-label\": \"Filter list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271\n    },\n    __self: this\n  }, React.createElement(FilterListIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272\n    },\n    __self: this\n  })))));\n};\n\nEnhancedTableToolbar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired\n};\nEnhancedTableToolbar = withStyles(toolbarStyles)(EnhancedTableToolbar);\nvar tableTitle = \"Users\";\n\nvar Users =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Users, _Component);\n\n  function Users(props) {\n    var _this3;\n\n    _classCallCheck(this, Users);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(Users).call(this, props));\n    _this3.state = {\n      open: false,\n      _isMounted: false\n    };\n\n    _this3.handleRequestSort = function (event, property) {\n      var orderBy = property;\n      var order = \"desc\";\n\n      if (_this3.state.orderBy === property && _this3.state.order === \"desc\") {\n        order = \"asc\";\n      }\n\n      _this3.setState({\n        order: order,\n        orderBy: orderBy\n      });\n    };\n\n    _this3.handleSelectAllClick = function (event) {\n      if (event.target.checked) {\n        _this3.setState(function (state) {\n          return {\n            selected: state.data.map(function (n) {\n              return n.id;\n            })\n          };\n        });\n\n        return;\n      }\n\n      _this3.setState({\n        selected: []\n      });\n    };\n\n    _this3.handleClick = function (event, id) {\n      var selected = _this3.state.selected;\n      var selectedIndex = selected.indexOf(id);\n      var newSelected = [];\n\n      if (selectedIndex === -1) {\n        newSelected = newSelected.concat(selected, id);\n      } else if (selectedIndex === 0) {\n        newSelected = newSelected.concat(selected.slice(1));\n      } else if (selectedIndex === selected.length - 1) {\n        newSelected = newSelected.concat(selected.slice(0, -1));\n      } else if (selectedIndex > 0) {\n        newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n      }\n\n      _this3.setState({\n        selected: newSelected\n      });\n    };\n\n    _this3.handleChangePage = function (event, page) {\n      _this3.setState({\n        page: page\n      });\n    };\n\n    _this3.handleChangeRowsPerPage = function (event) {\n      _this3.setState({\n        rowsPerPage: event.target.value\n      });\n    };\n\n    _this3.isSelected = function (id) {\n      return _this3.state.selected.indexOf(id) !== -1;\n    };\n\n    _this3.handleDialogClickOpen = function () {\n      _this3.setState({\n        open: true\n      });\n    };\n\n    _this3.handleDialogClose = function () {\n      _this3.setState({\n        open: false\n      });\n    };\n\n    var user = sessionStorage.getItem(\"user\");\n    var userCredentials = JSON.parse(user); //console.log(userCredentials);\n\n    _this3.state = {\n      redirect: false,\n      order: \"asc\",\n      orderBy: \"name\",\n      selected: [],\n      data: [],\n      page: 0,\n      userData: userCredentials,\n      rowsPerPage: 5,\n      loading: true\n    };\n    return _this3;\n  }\n\n  _createClass(Users, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this4 = this;\n\n      if (sessionStorage.getItem(\"user\")) {\n        var user = sessionStorage.getItem(\"user\");\n      } else {\n        this.setState({\n          redirect: true\n        });\n      }\n\n      GetData(\"users\", this.state.userData.token).then(function (result) {\n        if (_this4._isMounted) {\n          var reponseJSON = result;\n\n          if (reponseJSON.data) {\n            _this4.setState({\n              data: reponseJSON.data,\n              loading: false\n            }); //console.log(reponseJSON.data);\n\n          } else {\n            _this4.setState({\n              loading: false\n            });\n          }\n        }\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._isMounted = true;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    } //Table functions\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var classes = this.props.classes;\n      var loading = this.state.loading;\n      var _this$state = this.state,\n          data = _this$state.data,\n          order = _this$state.order,\n          orderBy = _this$state.orderBy,\n          selected = _this$state.selected,\n          rowsPerPage = _this$state.rowsPerPage,\n          page = _this$state.page;\n      var emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\n\n      if (this.state.isLoggedIn) {\n        return React.createElement(Redirect, {\n          to: \"/admin/login\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 411\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415\n        },\n        __self: this\n      }, loading ? React.createElement(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417\n        },\n        __self: this\n      }) : React.createElement(\"main\", {\n        className: classes.content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        className: classes.loginContainer,\n        container: true,\n        direction: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        md: 10,\n        lg: 10,\n        xs: 12,\n        xl: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        className: classes.loginContainer,\n        container: true,\n        direction: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        className: classes.breadCrumbs,\n        xs: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427\n        },\n        __self: this\n      }, React.createElement(Chip, {\n        avatar: React.createElement(Avatar, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 430\n          },\n          __self: this\n        }, React.createElement(Dboard, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 431\n          },\n          __self: this\n        })),\n        label: \"Dashboard\",\n        color: \"primary\",\n        className: classes.chip,\n        component: Link,\n        onClick: function onClick(e) {\n          e.stopPropagation();\n        },\n        to: \"/admin/dashboard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428\n        },\n        __self: this\n      }), React.createElement(Chip, {\n        avatar: React.createElement(Avatar, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 445\n          },\n          __self: this\n        }, React.createElement(SupervisorAccount, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 446\n          },\n          __self: this\n        })),\n        label: \"User Accounts\",\n        className: classes.chip,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 2,\n        className: classes.textRight,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453\n        },\n        __self: this\n      }, React.createElement(Tooltip, {\n        title: \"Add User \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"fab\",\n        color: \"primary\",\n        \"aria-label\": \"Add\",\n        className: classes.button,\n        onClick: this.handleDialogClickOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455\n        },\n        __self: this\n      }, React.createElement(AddIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462\n        },\n        __self: this\n      }))))), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468\n        },\n        __self: this\n      }, selected !== null ? React.createElement(EnhancedTableToolbar, {\n        numSelected: selected.length,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470\n        },\n        __self: this\n      }) : React.createElement(EnhancedTableToolbar, {\n        numSelected: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: classes.tableWrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475\n        },\n        __self: this\n      }, React.createElement(Table, {\n        className: classes.table,\n        \"aria-labelledby\": \"tableTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476\n        },\n        __self: this\n      }, React.createElement(EnhancedTableHead, {\n        numSelected: selected.length,\n        order: order,\n        orderBy: orderBy,\n        onSelectAllClick: this.handleSelectAllClick,\n        onRequestSort: this.handleRequestSort,\n        rowCount: data.length,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480\n        },\n        __self: this\n      }), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488\n        },\n        __self: this\n      }, stableSort(data, getSorting(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(function (n) {\n        var isSelected = _this5.isSelected(n.id);\n\n        return React.createElement(TableRow, {\n          hover: true,\n          onClick: function onClick(event) {\n            return _this5.handleClick(event, n.id);\n          },\n          role: \"checkbox\",\n          \"aria-checked\": isSelected,\n          tabIndex: -1,\n          key: n.id,\n          selected: isSelected,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 497\n          },\n          __self: this\n        }, React.createElement(TableCell, {\n          padding: \"checkbox\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 508\n          },\n          __self: this\n        }, React.createElement(Checkbox, {\n          checked: isSelected,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 509\n          },\n          __self: this\n        })), React.createElement(TableCell, {\n          component: \"th\",\n          scope: \"row\",\n          padding: \"none\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 511\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/admin/user/\" + n.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 516\n          },\n          __self: this\n        }, n.first_name + \" \" + n.last_name)), React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 520\n          },\n          __self: this\n        }, n.email), React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 521\n          },\n          __self: this\n        }, n.roles.map(function (role, key) {\n          return React.createElement(Chip, {\n            avatar: React.createElement(Avatar, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 525\n              },\n              __self: this\n            }, React.createElement(PermIdentity, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 526\n              },\n              __self: this\n            })),\n            key: key,\n            label: role.name,\n            color: \"primary\",\n            className: classes.chip,\n            variant: \"outlined\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 523\n            },\n            __self: this\n          });\n        })), React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 537\n          },\n          __self: this\n        }, n.status), React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 538\n          },\n          __self: this\n        }, React.createElement(Tooltip, {\n          title: \"View \" + n.first_name + \" \" + n.last_name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 539\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          color: \"primary\",\n          variant: \"flat\",\n          size: \"small\",\n          className: classes.button,\n          href: \"/admin/user/view\" + n.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 547\n          },\n          __self: this\n        }, React.createElement(Pageview, {\n          className: classNames(classes.leftIcon, classes.iconSmall),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 554\n          },\n          __self: this\n        }))), React.createElement(Tooltip, {\n          title: \"Edit \" + n.first_name + \" \" + n.last_name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 562\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          color: \"primary\",\n          variant: \"flat\",\n          size: \"small\",\n          className: classes.button,\n          href: \"/admin/user/edit\" + n.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 570\n          },\n          __self: this\n        }, React.createElement(Edit, {\n          className: classNames(classes.leftIcon, classes.iconSmall),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 577\n          },\n          __self: this\n        }))), React.createElement(Tooltip, {\n          title: \"Edit \" + n.first_name + \" \" + n.last_name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 585\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          color: \"secondary\",\n          variant: \"flat\",\n          size: \"small\",\n          className: classes.button,\n          onClick: null //href={\"/admin/user/\" + n.id}\n          ,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 593\n          },\n          __self: this\n        }, React.createElement(Delete, {\n          className: classNames(classes.leftIcon, classes.iconSmall),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 601\n          },\n          __self: this\n        })))));\n      }), emptyRows > 0 && React.createElement(TableRow, {\n        style: {\n          height: 49 * emptyRows\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 614\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        colSpan: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 615\n        },\n        __self: this\n      }))))), React.createElement(TablePagination, {\n        component: \"div\",\n        count: data.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        backIconButtonProps: {\n          \"aria-label\": \"Previous Page\"\n        },\n        nextIconButtonProps: {\n          \"aria-label\": \"Next Page\"\n        },\n        onChangePage: this.handleChangePage,\n        onChangeRowsPerPage: this.handleChangeRowsPerPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 621\n        },\n        __self: this\n      }))))), React.createElement(Dialog, {\n        open: this.state.open,\n        onClose: this.handleDialogClose,\n        \"aria-labelledby\": \"form-dialog-title\",\n        disableBackdropClick: true,\n        disableEscapeKeyDown: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 653\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"form-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 660\n        },\n        __self: this\n      }, \"Add User\"), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 661\n        },\n        __self: this\n      }, React.createElement(DialogContentText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 662\n        },\n        __self: this\n      }, \"To subscribe to this website, please enter your email address here. We will send updates occasionally.\"), React.createElement(TextField, {\n        autoFocus: true,\n        margin: \"dense\",\n        id: \"first_name\",\n        label: \"First Name\",\n        type: \"text\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 666\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        margin: \"dense\",\n        id: \"last_name\",\n        label: \"Last Name\",\n        type: \"text\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 674\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        margin: \"dense\",\n        id: \"name\",\n        label: \"Email Address\",\n        type: \"email\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 681\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        margin: \"dense\",\n        id: \"username\",\n        label: \"Username\",\n        type: \"text\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 688\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        margin: \"dense\",\n        id: \"password\",\n        label: \"Password\",\n        type: \"password\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 695\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        margin: \"dense\",\n        id: \"c_password\",\n        label: \"Confirm Password\",\n        type: \"password\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 702\n        },\n        __self: this\n      })), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 710\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleDialogClose,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 711\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        onClick: this.handleDialogClose,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 714\n        },\n        __self: this\n      }, \"Add User\")))));\n    }\n  }]);\n\n  return Users;\n}(Component);\n\nUsers.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles, {\n  withTheme: true\n})(Users);","map":{"version":3,"sources":["/Users/user/Documents/Dev/api-client/src/components/admin/users.jsx"],"names":["React","Component","Redirect","Link","createMuiTheme","PropTypes","Typography","withStyles","classNames","Grid","Button","Paper","Chip","Avatar","SupervisorAccount","Dboard","PermIdentity","Pageview","Edit","Delete","SaveIcon","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","TableSortLabel","Toolbar","Checkbox","IconButton","Tooltip","DeleteIcon","FilterListIcon","AddIcon","lighten","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","GetData","Loader","CustomTableCell","theme","head","backgroundColor","fontWeight","color","body","fontSize","styles","root","width","marginTop","spacing","unit","content","flexGrow","padding","paper","palette","text","secondary","toolbar","display","alignItems","justifyContent","mixins","textRight","textAlign","breadCrumbs","marginBottom","update","chip","marginRight","table","minWidth","tableWrapper","overflowX","button","typography","useNextVariants","desc","a","b","orderBy","stableSort","array","cmp","stabilizedThis","map","el","index","sort","order","getSorting","rows","id","string","disablePadding","label","EnhancedTableHead","createSortHandler","property","event","props","onRequestSort","onSelectAllClick","numSelected","rowCount","row","propTypes","number","isRequired","func","toolbarStyles","paddingRight","highlight","type","main","light","primary","dark","spacer","flex","actions","title","EnhancedTableToolbar","classes","tableTitle","object","Users","state","open","_isMounted","handleRequestSort","setState","handleSelectAllClick","target","checked","selected","data","n","handleClick","selectedIndex","indexOf","newSelected","concat","slice","length","handleChangePage","page","handleChangeRowsPerPage","rowsPerPage","value","isSelected","handleDialogClickOpen","handleDialogClose","user","sessionStorage","getItem","userCredentials","JSON","parse","redirect","userData","loading","token","then","result","reponseJSON","emptyRows","Math","min","isLoggedIn","loginContainer","e","stopPropagation","first_name","last_name","email","roles","role","key","name","status","leftIcon","iconSmall","height","withTheme"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport classNames from \"classnames\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport SupervisorAccount from \"@material-ui/icons/SupervisorAccount\";\nimport Dboard from \"@material-ui/icons/Dashboard\";\nimport PermIdentity from \"@material-ui/icons/PermIdentity\";\nimport Pageview from \"@material-ui/icons/PageviewOutlined\";\nimport Edit from \"@material-ui/icons/EditOutlined\";\nimport Delete from \"@material-ui/icons/DeleteOutlined\";\nimport SaveIcon from \"@material-ui/icons/SaveOutlined\";\n\n//Table Imports\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport DeleteIcon from \"@material-ui/icons/DeleteOutlined\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { lighten } from \"@material-ui/core/styles/colorManipulator\";\n\n//Form dialog imports\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\n//Get data import\nimport { GetData } from \"../../services/GetData\";\n\n//Loader import\nimport Loader from \"../Loader\";\n\n//CSS for custom header cell\nconst CustomTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: \"#f2f4f9\",\n    fontWeight: 600,\n    color: \"#555555\" //theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\n\n//General styles\nconst styles = theme => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing.unit * 3\n  },\n  content: {\n    flexGrow: 1,\n    padding: \"6rem 1.5rem\"\n  },\n  paper: {\n    padding: theme.spacing.unit * 4,\n    color: theme.palette.text.secondary\n  },\n  toolbar: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar\n  },\n  textRight: {\n    textAlign: \"right\"\n  },\n  breadCrumbs: {\n    marginBottom: \"1rem\"\n  },\n  update: {\n    padding: \"0rem 2rem\"\n  },\n  chip: {\n    marginRight: theme.spacing.unit\n  },\n  table: {\n    minWidth: 1020\n  },\n  tableWrapper: {\n    overflowX: \"auto\"\n  },\n  button: {\n    minWidth: \"32px\"\n  }\n});\n\ncreateMuiTheme({\n  typography: {\n    useNextVariants: true\n  }\n});\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => desc(a, b, orderBy)\n    : (a, b) => -desc(a, b, orderBy);\n}\n\nconst rows = [\n  {\n    id: \"name\",\n    string: true,\n    disablePadding: true,\n    label: \"Name\"\n  },\n  { id: \"email\", string: true, disablePadding: false, label: \"Email\" },\n  { id: \"role\", string: true, disablePadding: false, label: \"Role\" },\n  { id: \"status\", string: true, disablePadding: false, label: \"Status\" },\n  { id: \"action\", string: true, disablePadding: false, label: \"Action\" }\n];\n\nclass EnhancedTableHead extends React.Component {\n  createSortHandler = property => event => {\n    this.props.onRequestSort(event, property);\n  };\n\n  render() {\n    const {\n      onSelectAllClick,\n      order,\n      orderBy,\n      numSelected,\n      rowCount\n    } = this.props;\n\n    return (\n      <TableHead>\n        <TableRow>\n          <CustomTableCell padding=\"checkbox\">\n            <Checkbox\n              indeterminate={numSelected > 0 && numSelected < rowCount}\n              checked={numSelected === rowCount}\n              onChange={onSelectAllClick}\n            />\n          </CustomTableCell>\n          {rows.map(row => {\n            return (\n              <CustomTableCell\n                key={row.id}\n                padding={row.disablePadding ? \"none\" : \"default\"}\n                sortDirection={orderBy === row.id ? order : false}\n              >\n                <Tooltip\n                  title=\"Sort\"\n                  placement={row.string ? \"bottom-end\" : \"bottom-start\"}\n                  enterDelay={300}\n                >\n                  <TableSortLabel\n                    active={orderBy === row.id}\n                    direction={order}\n                    onClick={this.createSortHandler(row.id)}\n                  >\n                    {row.label}\n                  </TableSortLabel>\n                </Tooltip>\n              </CustomTableCell>\n            );\n          }, this)}\n        </TableRow>\n      </TableHead>\n    );\n  }\n}\n\nEnhancedTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.string.isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\n\nconst toolbarStyles = theme => ({\n  root: {\n    paddingRight: theme.spacing.unit\n  },\n  highlight:\n    theme.palette.type === \"light\"\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark\n        },\n  spacer: {\n    flex: \"1 1 100%\"\n  },\n  actions: {\n    color: theme.palette.text.secondary\n  },\n  title: {\n    flex: \"0 0 auto\"\n  }\n});\n\nlet EnhancedTableToolbar = props => {\n  const { numSelected, classes } = props;\n\n  return (\n    <Toolbar\n      className={classNames(classes.root, {\n        [classes.highlight]: numSelected > 0\n      })}\n    >\n      <div className={classes.title}>\n        {numSelected > 0 ? (\n          <Typography color=\"inherit\" variant=\"subtitle1\">\n            {numSelected} selected\n          </Typography>\n        ) : (\n          <Typography variant=\"h6\" id=\"tableTitle\">\n            {tableTitle}\n          </Typography>\n        )}\n      </div>\n      <div className={classes.spacer} />\n      <div className={classes.actions}>\n        {numSelected > 0 ? (\n          <Tooltip title=\"Delete\">\n            <IconButton aria-label=\"Delete\">\n              <DeleteIcon />\n            </IconButton>\n          </Tooltip>\n        ) : (\n          <Tooltip title=\"Filter list\">\n            <IconButton aria-label=\"Filter list\">\n              <FilterListIcon />\n            </IconButton>\n          </Tooltip>\n        )}\n      </div>\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired\n};\n\nEnhancedTableToolbar = withStyles(toolbarStyles)(EnhancedTableToolbar);\n\nconst tableTitle = \"Users\";\n\nclass Users extends Component {\n  state = {\n    open: false,\n    _isMounted: false\n  };\n\n  constructor(props) {\n    super(props);\n    let user = sessionStorage.getItem(\"user\");\n    const userCredentials = JSON.parse(user);\n    //console.log(userCredentials);\n\n    this.state = {\n      redirect: false,\n      order: \"asc\",\n      orderBy: \"name\",\n      selected: [],\n      data: [],\n      page: 0,\n      userData: userCredentials,\n      rowsPerPage: 5,\n      loading: true\n    };\n  }\n\n  componentWillMount() {\n    if (sessionStorage.getItem(\"user\")) {\n      let user = sessionStorage.getItem(\"user\");\n    } else {\n      this.setState({ redirect: true });\n    }\n\n    GetData(\"users\", this.state.userData.token).then(result => {\n      if (this._isMounted) {\n        let reponseJSON = result;\n        if (reponseJSON.data) {\n          this.setState({ data: reponseJSON.data, loading: false });\n          //console.log(reponseJSON.data);\n        } else {\n          this.setState({ loading: false });\n        }\n      }\n    });\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  //Table functions\n  handleRequestSort = (event, property) => {\n    const orderBy = property;\n    let order = \"desc\";\n\n    if (this.state.orderBy === property && this.state.order === \"desc\") {\n      order = \"asc\";\n    }\n\n    this.setState({ order, orderBy });\n  };\n\n  handleSelectAllClick = event => {\n    if (event.target.checked) {\n      this.setState(state => ({ selected: state.data.map(n => n.id) }));\n      return;\n    }\n    this.setState({ selected: [] });\n  };\n\n  handleClick = (event, id) => {\n    const { selected } = this.state;\n    const selectedIndex = selected.indexOf(id);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, id);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    this.setState({ selected: newSelected });\n  };\n\n  handleChangePage = (event, page) => {\n    this.setState({ page });\n  };\n\n  handleChangeRowsPerPage = event => {\n    this.setState({ rowsPerPage: event.target.value });\n  };\n\n  isSelected = id => this.state.selected.indexOf(id) !== -1;\n\n  //Form dialog functions\n  handleDialogClickOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleDialogClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { loading } = this.state;\n    const { data, order, orderBy, selected, rowsPerPage, page } = this.state;\n    const emptyRows =\n      rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\n\n    if (this.state.isLoggedIn) {\n      return <Redirect to=\"/admin/login\" />;\n    }\n\n    return (\n      <div>\n        {loading ? (\n          <Loader />\n        ) : (\n          <main className={classes.content}>\n            <Grid className={classes.loginContainer} container direction=\"row\">\n              <Grid item sm={12} md={10} lg={10} xs={12} xl={10}>\n                <Grid\n                  className={classes.loginContainer}\n                  container\n                  direction=\"row\"\n                >\n                  <Grid item className={classes.breadCrumbs} xs={10}>\n                    <Chip\n                      avatar={\n                        <Avatar>\n                          <Dboard />\n                        </Avatar>\n                      }\n                      label=\"Dashboard\"\n                      color=\"primary\"\n                      className={classes.chip}\n                      component={Link}\n                      onClick={e => {\n                        e.stopPropagation();\n                      }}\n                      to={\"/admin/dashboard\"}\n                    />\n                    <Chip\n                      avatar={\n                        <Avatar>\n                          <SupervisorAccount />\n                        </Avatar>\n                      }\n                      label=\"User Accounts\"\n                      className={classes.chip}\n                    />\n                  </Grid>\n                  <Grid item xs={2} className={classes.textRight}>\n                    <Tooltip title={\"Add User \"}>\n                      <Button\n                        variant=\"fab\"\n                        color=\"primary\"\n                        aria-label=\"Add\"\n                        className={classes.button}\n                        onClick={this.handleDialogClickOpen}\n                      >\n                        <AddIcon />\n                      </Button>\n                    </Tooltip>\n                  </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                  <Paper className={classes.root}>\n                    {selected !== null ? (\n                      <EnhancedTableToolbar numSelected={selected.length} />\n                    ) : (\n                      <EnhancedTableToolbar numSelected={0} />\n                    )}\n\n                    <div className={classes.tableWrapper}>\n                      <Table\n                        className={classes.table}\n                        aria-labelledby=\"tableTitle\"\n                      >\n                        <EnhancedTableHead\n                          numSelected={selected.length}\n                          order={order}\n                          orderBy={orderBy}\n                          onSelectAllClick={this.handleSelectAllClick}\n                          onRequestSort={this.handleRequestSort}\n                          rowCount={data.length}\n                        />\n                        <TableBody>\n                          {stableSort(data, getSorting(order, orderBy))\n                            .slice(\n                              page * rowsPerPage,\n                              page * rowsPerPage + rowsPerPage\n                            )\n                            .map(n => {\n                              const isSelected = this.isSelected(n.id);\n                              return (\n                                <TableRow\n                                  hover\n                                  onClick={event =>\n                                    this.handleClick(event, n.id)\n                                  }\n                                  role=\"checkbox\"\n                                  aria-checked={isSelected}\n                                  tabIndex={-1}\n                                  key={n.id}\n                                  selected={isSelected}\n                                >\n                                  <TableCell padding=\"checkbox\">\n                                    <Checkbox checked={isSelected} />\n                                  </TableCell>\n                                  <TableCell\n                                    component=\"th\"\n                                    scope=\"row\"\n                                    padding=\"none\"\n                                  >\n                                    <Link to={\"/admin/user/\" + n.id}>\n                                      {n.first_name + \" \" + n.last_name}\n                                    </Link>\n                                  </TableCell>\n                                  <TableCell>{n.email}</TableCell>\n                                  <TableCell>\n                                    {n.roles.map((role, key) => (\n                                      <Chip\n                                        avatar={\n                                          <Avatar>\n                                            <PermIdentity />\n                                          </Avatar>\n                                        }\n                                        key={key}\n                                        label={role.name}\n                                        color=\"primary\"\n                                        className={classes.chip}\n                                        variant=\"outlined\"\n                                      />\n                                    ))}\n                                  </TableCell>\n                                  <TableCell>{n.status}</TableCell>\n                                  <TableCell>\n                                    <Tooltip\n                                      title={\n                                        \"View \" +\n                                        n.first_name +\n                                        \" \" +\n                                        n.last_name\n                                      }\n                                    >\n                                      <IconButton\n                                        color=\"primary\"\n                                        variant=\"flat\"\n                                        size=\"small\"\n                                        className={classes.button}\n                                        href={\"/admin/user/view\" + n.id}\n                                      >\n                                        <Pageview\n                                          className={classNames(\n                                            classes.leftIcon,\n                                            classes.iconSmall\n                                          )}\n                                        />\n                                      </IconButton>\n                                    </Tooltip>\n                                    <Tooltip\n                                      title={\n                                        \"Edit \" +\n                                        n.first_name +\n                                        \" \" +\n                                        n.last_name\n                                      }\n                                    >\n                                      <IconButton\n                                        color=\"primary\"\n                                        variant=\"flat\"\n                                        size=\"small\"\n                                        className={classes.button}\n                                        href={\"/admin/user/edit\" + n.id}\n                                      >\n                                        <Edit\n                                          className={classNames(\n                                            classes.leftIcon,\n                                            classes.iconSmall\n                                          )}\n                                        />\n                                      </IconButton>\n                                    </Tooltip>\n                                    <Tooltip\n                                      title={\n                                        \"Edit \" +\n                                        n.first_name +\n                                        \" \" +\n                                        n.last_name\n                                      }\n                                    >\n                                      <IconButton\n                                        color=\"secondary\"\n                                        variant=\"flat\"\n                                        size=\"small\"\n                                        className={classes.button}\n                                        onClick={null}\n                                        //href={\"/admin/user/\" + n.id}\n                                      >\n                                        <Delete\n                                          className={classNames(\n                                            classes.leftIcon,\n                                            classes.iconSmall\n                                          )}\n                                        />\n                                      </IconButton>\n                                    </Tooltip>\n                                  </TableCell>\n                                </TableRow>\n                              );\n                            })}\n                          {emptyRows > 0 && (\n                            <TableRow style={{ height: 49 * emptyRows }}>\n                              <TableCell colSpan={6} />\n                            </TableRow>\n                          )}\n                        </TableBody>\n                      </Table>\n                    </div>\n                    <TablePagination\n                      component=\"div\"\n                      count={data.length}\n                      rowsPerPage={rowsPerPage}\n                      page={page}\n                      backIconButtonProps={{\n                        \"aria-label\": \"Previous Page\"\n                      }}\n                      nextIconButtonProps={{\n                        \"aria-label\": \"Next Page\"\n                      }}\n                      onChangePage={this.handleChangePage}\n                      onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                    />\n                  </Paper>\n                </Grid>\n              </Grid>\n              {/* <Grid\n              className={classes.update}\n              item\n              sm={12}\n              md={3}\n              lg={3}\n              xs={12}\n              xl={3}\n            >\n              <Typography variant=\"h6\" component=\"h5\">\n                Updates\n              </Typography>\n            </Grid> */}\n            </Grid>\n            {/*Form dialog*/}\n            <Dialog\n              open={this.state.open}\n              onClose={this.handleDialogClose}\n              aria-labelledby=\"form-dialog-title\"\n              disableBackdropClick={true}\n              disableEscapeKeyDown={true}\n            >\n              <DialogTitle id=\"form-dialog-title\">Add User</DialogTitle>\n              <DialogContent>\n                <DialogContentText>\n                  To subscribe to this website, please enter your email address\n                  here. We will send updates occasionally.\n                </DialogContentText>\n                <TextField\n                  autoFocus\n                  margin=\"dense\"\n                  id=\"first_name\"\n                  label=\"First Name\"\n                  type=\"text\"\n                  fullWidth\n                />\n                <TextField\n                  margin=\"dense\"\n                  id=\"last_name\"\n                  label=\"Last Name\"\n                  type=\"text\"\n                  fullWidth\n                />\n                <TextField\n                  margin=\"dense\"\n                  id=\"name\"\n                  label=\"Email Address\"\n                  type=\"email\"\n                  fullWidth\n                />\n                <TextField\n                  margin=\"dense\"\n                  id=\"username\"\n                  label=\"Username\"\n                  type=\"text\"\n                  fullWidth\n                />\n                <TextField\n                  margin=\"dense\"\n                  id=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  fullWidth\n                />\n                <TextField\n                  margin=\"dense\"\n                  id=\"c_password\"\n                  label=\"Confirm Password\"\n                  type=\"password\"\n                  fullWidth\n                />\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={this.handleDialogClose} color=\"primary\">\n                  Cancel\n                </Button>\n                <Button onClick={this.handleDialogClose} color=\"primary\">\n                  Add User\n                </Button>\n              </DialogActions>\n            </Dialog>\n          </main>\n        )}\n      </div>\n    );\n  }\n}\n\nUsers.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(Users);\n"]},"metadata":{},"sourceType":"module"}