{"ast":null,"code":"export function PostData(type, userData) {\n  var BaseUrl = \"http://hostdev:8888/api-server/public/\";\n  return new Promise(function (resolve, reject) {\n    fetch(BaseUrl + type, {\n      method: \"POST\",\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify(userData)\n    }).then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      resolve(responseJson);\n    }).catch(function (error) {\n      reject(error);\n    });\n  });\n}","map":{"version":3,"sources":["/Users/user/Documents/Dev/api-client/src/services/PostData.js"],"names":["PostData","type","userData","BaseUrl","Promise","resolve","reject","fetch","method","headers","Accept","body","JSON","stringify","then","response","json","responseJson","catch","error"],"mappings":"AAAA,OAAO,SAASA,QAAT,CAAkBC,IAAlB,EAAwBC,QAAxB,EAAkC;AACvC,MAAIC,OAAO,GAAG,wCAAd;AAEA,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCC,IAAAA,KAAK,CAACJ,OAAO,GAAGF,IAAX,EAAiB;AACpBO,MAAAA,MAAM,EAAE,MADY;AAEpBC,MAAAA,OAAO,EAAE;AACP,uCAA+B,GADxB;AAEP,wBAAgB,kBAFT;AAGPC,QAAAA,MAAM,EAAE;AAHD,OAFW;AAOpBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeX,QAAf;AAPc,KAAjB,CAAL,CASGY,IATH,CASQ,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KAThB,EAUGF,IAVH,CAUQ,UAAAG,YAAY,EAAI;AACpBZ,MAAAA,OAAO,CAACY,YAAD,CAAP;AACD,KAZH,EAaGC,KAbH,CAaS,UAAAC,KAAK,EAAI;AACdb,MAAAA,MAAM,CAACa,KAAD,CAAN;AACD,KAfH;AAgBD,GAjBM,CAAP;AAkBD","sourcesContent":["export function PostData(type, userData) {\n  let BaseUrl = \"http://hostdev:8888/api-server/public/\";\n\n  return new Promise((resolve, reject) => {\n    fetch(BaseUrl + type, {\n      method: \"POST\",\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify(userData)\n    })\n      .then(response => response.json())\n      .then(responseJson => {\n        resolve(responseJson);\n      })\n      .catch(error => {\n        reject(error);\n      });\n  });\n}\n"]},"metadata":{},"sourceType":"module"}