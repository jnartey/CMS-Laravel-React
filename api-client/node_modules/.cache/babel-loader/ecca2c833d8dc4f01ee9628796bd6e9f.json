{"ast":null,"code":"import _defineProperty from \"/Users/user/Documents/Dev/api-client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/user/Documents/Dev/api-client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/user/Documents/Dev/api-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/user/Documents/Dev/api-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/user/Documents/Dev/api-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/user/Documents/Dev/api-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/user/Documents/Dev/api-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/user/Documents/Dev/api-client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/user/Documents/Dev/api-client/src/components/admin/login.jsx\";\nimport React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { withStyles, createMuiTheme } from \"@material-ui/core/styles\"; //import MarkdownElement from \"@material-ui/docs/MarkdownElement\";\n\nimport \"./admin.css\";\nimport { NavLink } from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Email from \"@material-ui/icons/Email\";\nimport Lock from \"@material-ui/icons/Lock\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { PostData } from \"../../services/PostData\";\nimport Loader from \"../Loader\";\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      flexGrow: 1,\n      height: \"100vh\",\n      padding: \"0 8%\"\n    },\n    loginContainer: {\n      height: \"100vh\"\n    },\n    paper: {\n      padding: theme.spacing.unit * 2,\n      color: theme.palette.text.secondary\n    },\n    control: {\n      padding: theme.spacing.unit * 2\n    },\n    button: {\n      margin: theme.spacing.unit\n    },\n    textRight: {\n      textAlign: \"right\"\n    },\n    marginTop: {\n      marginTop: \"0.5rem\"\n    }\n  };\n};\n\nvar theme = createMuiTheme({\n  typography: {\n    useNextVariants: true\n  }\n});\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this, props));\n\n    _this.handleClickShowPassword = function () {\n      _this.setState(function (state) {\n        return {\n          showPassword: !state.showPassword\n        };\n      });\n    };\n\n    _this.state = {\n      email: \"\",\n      emailError: false,\n      emailErrorText: \"\",\n      password: \"\",\n      passwordError: false,\n      passwordErrorText: \"\",\n      remember_me: \"\",\n      isLoggedIn: false,\n      loading: true\n    };\n    _this.login = _this.login.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        loading: false\n      });\n    }\n  }, {\n    key: \"validate\",\n    value: function validate() {\n      var isError = false;\n      var errors = {};\n\n      if (this.state.email.trim() === \"\") {\n        isError = true;\n        errors.emailError = true;\n        errors.emailErrorText = \"Email is required\";\n      }\n\n      if (this.state.email.indexOf(\"@\") === -1) {\n        isError = true;\n        errors.emailError = true;\n        errors.emailErrorText = \"Email is invalid\";\n      }\n\n      if (this.state.password.trim() === \"\") {\n        isError = true;\n        errors.passwordError = true;\n        errors.passwordErrorText = \"Password is required\";\n      }\n\n      if (isError) {\n        this.setState(_objectSpread({}, this.state, errors));\n      }\n\n      return isError;\n    }\n  }, {\n    key: \"login\",\n    value: function login() {\n      var _this2 = this;\n\n      var err = this.validate();\n\n      if (!err) {\n        if (this.state.email && this.state.password) {\n          this.setState({\n            loading: true\n          });\n          PostData(\"login\", this.state).then(function (result) {\n            var reponseJSON = result;\n\n            if (reponseJSON.data) {\n              sessionStorage.setItem(\"user\", JSON.stringify(reponseJSON.data)); //console.log(sessionStorage.getItem(\"user\"));\n\n              _this2.setState({\n                isLoggedIn: true,\n                loading: false\n              });\n            } else {\n              _this2.setState({\n                loading: false\n              });\n            }\n          });\n        }\n      }\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(e) {\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n      var isError = false;\n      var errors = {};\n\n      if (this.state.email.trim() === \"\") {\n        isError = false;\n        errors.emailError = false;\n        errors.emailErrorText = \"Email is required\";\n      }\n\n      if (this.state.email.indexOf(\"@\") === -1) {\n        isError = true;\n        errors.emailError = true;\n        errors.emailErrorText = \"Email is invalid\";\n      }\n\n      if (this.state.password.trim() === \"\") {\n        isError = true;\n        errors.passwordError = true;\n        errors.passwordErrorText = \"Password is required\";\n      }\n\n      if (isError) {\n        this.setState(_objectSpread({}, this.state, errors));\n      }\n\n      return isError; //console.log(this.state);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.isLoggedIn) {\n        return React.createElement(Redirect, {\n          to: \"/admin/dashboard\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        });\n      }\n\n      var loading = this.state.loading;\n      var classes = this.props.classes; // if (sessionStorage.getItem(\"user\")) {\n      //   return <Redirect to=\"/admin/dashboard\" />;\n      // }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, loading ? React.createElement(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }) : React.createElement(Grid, {\n        className: classes.loginContainer,\n        container: true,\n        direction: \"row\",\n        justify: \"center\",\n        alignItems: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        md: 4,\n        lg: 3,\n        xs: 12,\n        xl: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        fullWidth: true,\n        className: classes.margin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"input-with-icon-adornment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, \"Your Email\"), React.createElement(Input, {\n        id: \"input-with-icon-adornment\",\n        name: \"email\",\n        label: \"Email\",\n        onChange: this.onChange,\n        error: this.state.emailError,\n        required: true,\n        endAdornment: React.createElement(InputAdornment, {\n          position: \"end\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          \"aria-label\": \"Toggle visibility\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          },\n          __self: this\n        }, React.createElement(Email, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212\n          },\n          __self: this\n        }))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }), this.state.emailError ? React.createElement(FormHelperText, {\n        id: \"component-error-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, this.state.emailErrorText) : \"\"), React.createElement(FormControl, {\n        fullWidth: true,\n        className: (classes.margin, classes.marginTop),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"input-with-icon-adornment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, \"Your Password\"), React.createElement(Input, {\n        id: \"adornment-password\",\n        type: this.state.showPassword ? \"text\" : \"password\",\n        name: \"password\",\n        label: \"Password\",\n        onChange: this.onChange,\n        error: this.state.passwordError,\n        required: true,\n        endAdornment: React.createElement(InputAdornment, {\n          position: \"end\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          \"aria-label\": \"Toggle password visibility\",\n          onClick: this.handleClickShowPassword,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 242\n          },\n          __self: this\n        }, this.state.showPassword ? React.createElement(Visibility, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247\n          },\n          __self: this\n        }) : React.createElement(VisibilityOff, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249\n          },\n          __self: this\n        }))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }), this.state.passwordError ? React.createElement(FormHelperText, {\n        id: \"component-error-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, this.state.passwordErrorText) : \"\"), React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        className: classes.marginTop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        className: classes.textLeft,\n        item: true,\n        sm: 12,\n        md: 6,\n        lg: 6,\n        xs: 6,\n        xl: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, React.createElement(FormControlLabel, {\n        control: React.createElement(Checkbox, {\n          id: \"remember_me\",\n          name: \"remember_me\",\n          checked: this.state.isChecked,\n          onChange: this.onChange,\n          value: \"Remember me\",\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 275\n          },\n          __self: this\n        }),\n        label: \"Remember me\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        className: classes.textRight,\n        item: true,\n        sm: 12,\n        md: 6,\n        lg: 6,\n        xs: 6,\n        xl: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.login,\n        className: classes.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, \"Login\"))), React.createElement(Typography, {\n        variant: \"body2\",\n        gutterBottom: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        to: \"/admin/login/reset-password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }, \"Forgot your password?\")))))) // <div className=\"p-grid p-justify-center\" style={{ height: \"100vh\" }}>\n      //   <div className=\"p-sm-12 p-md-4 p-lg-3 p-xl-3 p-col-align-center\">\n      //     <div className=\"p-col-12\">\n      //       <div className=\"p-inputgroup\">\n      //         <span className=\"p-inputgroup-addon\">\n      //           <i className=\"pi pi-envelope\" />\n      //         </span>\n      //         <InputText\n      //           name=\"email\"\n      //           placeholder=\"Email\"\n      //           onChange={this.onChange}\n      //         />\n      //       </div>\n      //     </div>\n      //     <div className=\"p-col-12\">\n      //       <div className=\"p-inputgroup\">\n      //         <span className=\"p-inputgroup-addon\">\n      //           <i className=\"pi pi-lock\" />\n      //         </span>\n      //         <Password\n      //           id=\"password\"\n      //           name=\"password\"\n      //           value={this.state.value}\n      //           onChange={this.onChange}\n      //           placeholder=\"Password\"\n      //         />\n      //       </div>\n      //     </div>\n      //     <div className=\"p-col p-grid\">\n      //       <div className=\"p-col-7\">\n      //         <Checkbox\n      //           inputId=\"remember_me\"\n      //           name=\"remember_me\"\n      //           value=\"remember\"\n      //           checked={this.state.isChecked}\n      //           onChange={this.onChange}\n      //         />\n      //         <label\n      //           htmlFor=\"remember_me\"\n      //           className=\"p-checkbox-label remember-me\"\n      //         >\n      //           Remember me\n      //         </label>\n      //       </div>\n      //       <div className=\"p-col-5 text-right\">\n      //         <Button\n      //           label=\"Login\"\n      //           className=\"p-button-raised p-button-secondary\"\n      //           onClick={this.login}\n      //         />\n      //       </div>\n      //     </div>\n      //     <div className=\"p-col-12\">\n      //       <div className=\"reset-password\">\n      //         <NavLink to=\"/admin/login/reset-password\">\n      //           <span>Forgot your password?</span>\n      //         </NavLink>\n      //       </div>\n      //     </div>\n      //   </div>\n      // </div>\n      ;\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nLogin.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Login);","map":{"version":3,"sources":["/Users/user/Documents/Dev/api-client/src/components/admin/login.jsx"],"names":["React","Component","Redirect","PropTypes","withStyles","createMuiTheme","NavLink","Grid","IconButton","Email","Lock","Input","InputLabel","InputAdornment","FormHelperText","FormControl","FormControlLabel","TextField","Button","Checkbox","Visibility","VisibilityOff","Typography","PostData","Loader","styles","theme","root","flexGrow","height","padding","loginContainer","paper","spacing","unit","color","palette","text","secondary","control","button","margin","textRight","textAlign","marginTop","typography","useNextVariants","Login","props","handleClickShowPassword","setState","state","showPassword","email","emailError","emailErrorText","password","passwordError","passwordErrorText","remember_me","isLoggedIn","loading","login","bind","onChange","isError","errors","trim","indexOf","err","validate","then","result","reponseJSON","data","sessionStorage","setItem","JSON","stringify","e","target","name","value","classes","textLeft","isChecked","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { withStyles, createMuiTheme } from \"@material-ui/core/styles\";\n//import MarkdownElement from \"@material-ui/docs/MarkdownElement\";\nimport \"./admin.css\";\nimport { NavLink } from \"react-router-dom\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Email from \"@material-ui/icons/Email\";\nimport Lock from \"@material-ui/icons/Lock\";\n\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { PostData } from \"../../services/PostData\";\nimport Loader from \"../Loader\";\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    height: \"100vh\",\n    padding: \"0 8%\"\n  },\n  loginContainer: {\n    height: \"100vh\"\n  },\n  paper: {\n    padding: theme.spacing.unit * 2,\n    color: theme.palette.text.secondary\n  },\n  control: {\n    padding: theme.spacing.unit * 2\n  },\n  button: {\n    margin: theme.spacing.unit\n  },\n  textRight: {\n    textAlign: \"right\"\n  },\n  marginTop: {\n    marginTop: \"0.5rem\"\n  }\n});\n\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true\n  }\n});\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      emailError: false,\n      emailErrorText: \"\",\n      password: \"\",\n      passwordError: false,\n      passwordErrorText: \"\",\n      remember_me: \"\",\n      isLoggedIn: false,\n      loading: true\n    };\n\n    this.login = this.login.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({ loading: false });\n  }\n\n  validate() {\n    let isError = false;\n    const errors = {};\n\n    if (this.state.email.trim() === \"\") {\n      isError = true;\n      errors.emailError = true;\n      errors.emailErrorText = \"Email is required\";\n    }\n\n    if (this.state.email.indexOf(\"@\") === -1) {\n      isError = true;\n      errors.emailError = true;\n      errors.emailErrorText = \"Email is invalid\";\n    }\n\n    if (this.state.password.trim() === \"\") {\n      isError = true;\n      errors.passwordError = true;\n      errors.passwordErrorText = \"Password is required\";\n    }\n\n    if (isError) {\n      this.setState({ ...this.state, ...errors });\n    }\n\n    return isError;\n  }\n\n  login() {\n    const err = this.validate();\n\n    if (!err) {\n      if (this.state.email && this.state.password) {\n        this.setState({ loading: true });\n        PostData(\"login\", this.state).then(result => {\n          let reponseJSON = result;\n          if (reponseJSON.data) {\n            sessionStorage.setItem(\"user\", JSON.stringify(reponseJSON.data));\n            //console.log(sessionStorage.getItem(\"user\"));\n            this.setState({ isLoggedIn: true, loading: false });\n          } else {\n            this.setState({ loading: false });\n          }\n        });\n      }\n    }\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n\n    let isError = false;\n    const errors = {};\n\n    if (this.state.email.trim() === \"\") {\n      isError = false;\n      errors.emailError = false;\n      errors.emailErrorText = \"Email is required\";\n    }\n\n    if (this.state.email.indexOf(\"@\") === -1) {\n      isError = true;\n      errors.emailError = true;\n      errors.emailErrorText = \"Email is invalid\";\n    }\n\n    if (this.state.password.trim() === \"\") {\n      isError = true;\n      errors.passwordError = true;\n      errors.passwordErrorText = \"Password is required\";\n    }\n\n    if (isError) {\n      this.setState({ ...this.state, ...errors });\n    }\n\n    return isError;\n    //console.log(this.state);\n  }\n\n  handleClickShowPassword = () => {\n    this.setState(state => ({ showPassword: !state.showPassword }));\n  };\n\n  render() {\n    if (this.state.isLoggedIn) {\n      return <Redirect to=\"/admin/dashboard\" />;\n    }\n\n    const { loading } = this.state;\n    const { classes } = this.props;\n\n    // if (sessionStorage.getItem(\"user\")) {\n    //   return <Redirect to=\"/admin/dashboard\" />;\n    // }\n\n    return (\n      <div>\n        {loading ? (\n          <Loader />\n        ) : (\n          <Grid\n            className={classes.loginContainer}\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n            <Grid item sm={12} md={4} lg={3} xs={12} xl={3}>\n              <FormControl fullWidth className={classes.margin}>\n                <InputLabel htmlFor=\"input-with-icon-adornment\">\n                  Your Email\n                </InputLabel>\n                <Input\n                  id=\"input-with-icon-adornment\"\n                  name=\"email\"\n                  label=\"Email\"\n                  onChange={this.onChange}\n                  error={this.state.emailError}\n                  required={true}\n                  endAdornment={\n                    <InputAdornment position=\"end\">\n                      <IconButton aria-label=\"Toggle visibility\">\n                        <Email />\n                      </IconButton>\n                    </InputAdornment>\n                  }\n                />\n                {this.state.emailError ? (\n                  <FormHelperText id=\"component-error-text\">\n                    {this.state.emailErrorText}\n                  </FormHelperText>\n                ) : (\n                  \"\"\n                )}\n              </FormControl>\n              <FormControl\n                fullWidth\n                className={(classes.margin, classes.marginTop)}\n              >\n                <InputLabel htmlFor=\"input-with-icon-adornment\">\n                  Your Password\n                </InputLabel>\n                <Input\n                  id=\"adornment-password\"\n                  type={this.state.showPassword ? \"text\" : \"password\"}\n                  name=\"password\"\n                  label=\"Password\"\n                  onChange={this.onChange}\n                  error={this.state.passwordError}\n                  required={true}\n                  endAdornment={\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        aria-label=\"Toggle password visibility\"\n                        onClick={this.handleClickShowPassword}\n                      >\n                        {this.state.showPassword ? (\n                          <Visibility />\n                        ) : (\n                          <VisibilityOff />\n                        )}\n                      </IconButton>\n                    </InputAdornment>\n                  }\n                />\n                {this.state.passwordError ? (\n                  <FormHelperText id=\"component-error-text\">\n                    {this.state.passwordErrorText}\n                  </FormHelperText>\n                ) : (\n                  \"\"\n                )}\n              </FormControl>\n              <Grid container direction=\"row\" className={classes.marginTop}>\n                <Grid\n                  className={classes.textLeft}\n                  item\n                  sm={12}\n                  md={6}\n                  lg={6}\n                  xs={6}\n                  xl={6}\n                >\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        id=\"remember_me\"\n                        name=\"remember_me\"\n                        checked={this.state.isChecked}\n                        onChange={this.onChange}\n                        value=\"Remember me\"\n                        color=\"primary\"\n                      />\n                    }\n                    label=\"Remember me\"\n                  />\n                </Grid>\n                <Grid\n                  className={classes.textRight}\n                  item\n                  sm={12}\n                  md={6}\n                  lg={6}\n                  xs={6}\n                  xl={6}\n                >\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={this.login}\n                    className={classes.button}\n                  >\n                    Login\n                  </Button>\n                </Grid>\n              </Grid>\n              <Typography variant=\"body2\" gutterBottom>\n                <NavLink to=\"/admin/login/reset-password\">\n                  <span>Forgot your password?</span>\n                </NavLink>\n              </Typography>\n            </Grid>\n          </Grid>\n        )}\n      </div>\n      // <div className=\"p-grid p-justify-center\" style={{ height: \"100vh\" }}>\n      //   <div className=\"p-sm-12 p-md-4 p-lg-3 p-xl-3 p-col-align-center\">\n      //     <div className=\"p-col-12\">\n      //       <div className=\"p-inputgroup\">\n      //         <span className=\"p-inputgroup-addon\">\n      //           <i className=\"pi pi-envelope\" />\n      //         </span>\n      //         <InputText\n      //           name=\"email\"\n      //           placeholder=\"Email\"\n      //           onChange={this.onChange}\n      //         />\n      //       </div>\n      //     </div>\n      //     <div className=\"p-col-12\">\n      //       <div className=\"p-inputgroup\">\n      //         <span className=\"p-inputgroup-addon\">\n      //           <i className=\"pi pi-lock\" />\n      //         </span>\n      //         <Password\n      //           id=\"password\"\n      //           name=\"password\"\n      //           value={this.state.value}\n      //           onChange={this.onChange}\n      //           placeholder=\"Password\"\n      //         />\n      //       </div>\n      //     </div>\n      //     <div className=\"p-col p-grid\">\n      //       <div className=\"p-col-7\">\n      //         <Checkbox\n      //           inputId=\"remember_me\"\n      //           name=\"remember_me\"\n      //           value=\"remember\"\n      //           checked={this.state.isChecked}\n      //           onChange={this.onChange}\n      //         />\n      //         <label\n      //           htmlFor=\"remember_me\"\n      //           className=\"p-checkbox-label remember-me\"\n      //         >\n      //           Remember me\n      //         </label>\n      //       </div>\n      //       <div className=\"p-col-5 text-right\">\n      //         <Button\n      //           label=\"Login\"\n      //           className=\"p-button-raised p-button-secondary\"\n      //           onClick={this.login}\n      //         />\n      //       </div>\n      //     </div>\n      //     <div className=\"p-col-12\">\n      //       <div className=\"reset-password\">\n      //         <NavLink to=\"/admin/login/reset-password\">\n      //           <span>Forgot your password?</span>\n      //         </NavLink>\n      //       </div>\n      //     </div>\n      //   </div>\n      // </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Login);\n"]},"metadata":{},"sourceType":"module"}