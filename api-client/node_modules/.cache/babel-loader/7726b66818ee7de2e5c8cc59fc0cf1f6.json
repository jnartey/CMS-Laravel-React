{"ast":null,"code":"import _defineProperty from \"/Users/user/Documents/Dev/api-client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/user/Documents/Dev/api-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/user/Documents/Dev/api-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/user/Documents/Dev/api-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/user/Documents/Dev/api-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/user/Documents/Dev/api-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/user/Documents/Dev/api-client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/user/Documents/Dev/api-client/src/components/admin/login.jsx\";\nimport React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\"; //import MarkdownElement from \"@material-ui/docs/MarkdownElement\";\n\nimport \"./admin.css\";\nimport { NavLink } from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Email from \"@material-ui/icons/Email\";\nimport Lock from \"@material-ui/icons/Lock\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { PostData } from \"../../services/PostData\";\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      flexGrow: 1,\n      height: \"100vh\",\n      padding: \"0 8%\"\n    },\n    loginContainer: {\n      height: \"100vh\"\n    },\n    paper: {\n      padding: theme.spacing.unit * 2,\n      color: theme.palette.text.secondary\n    },\n    control: {\n      padding: theme.spacing.unit * 2\n    },\n    button: {\n      margin: theme.spacing.unit\n    }\n  };\n};\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this, props));\n\n    _this.handleClickShowPassword = function () {\n      _this.setState(function (state) {\n        return {\n          showPassword: !state.showPassword\n        };\n      });\n    };\n\n    _this.state = {\n      email: \"\",\n      password: \"\",\n      remember_me: \"\",\n      isLoggedIn: false\n    };\n    _this.login = _this.login.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"login\",\n    value: function login() {\n      var _this2 = this;\n\n      if (this.state.email && this.state.password) {\n        PostData(\"login\", this.state).then(function (result) {\n          var reponseJSON = result;\n\n          if (reponseJSON.data) {\n            sessionStorage.setItem(\"user\", JSON.stringify(reponseJSON.data));\n            console.log(sessionStorage.getItem(\"user\"));\n\n            _this2.setState({\n              isLoggedIn: true\n            });\n          } else {\n            console.log(\"Login error!\");\n          }\n        });\n      }\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(e) {\n      this.setState(_defineProperty({}, e.target.name, e.target.value)); //console.log(this.state);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.isLoggedIn) {\n        return React.createElement(Redirect, {\n          to: \"/admin/dashboard\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        });\n      }\n\n      var classes = this.props.classes; // if (sessionStorage.getItem(\"user\")) {\n      //   return <Redirect to=\"/admin/dashboard\" />;\n      // }\n\n      return React.createElement(\"div\", {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        className: classes.loginContainer,\n        container: true,\n        direction: \"row\",\n        justify: \"center\",\n        alignItems: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        md: 4,\n        lg: 3,\n        xs: 12,\n        xl: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        fullWidth: true,\n        className: classes.margin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"input-with-icon-adornment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Your Email\"), React.createElement(Input, {\n        id: \"input-with-icon-adornment\",\n        name: \"email\",\n        label: \"Email\",\n        onChange: this.onChange,\n        endAdornment: React.createElement(InputAdornment, {\n          position: \"end\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          \"aria-label\": \"Toggle visibility\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, React.createElement(Email, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      })), React.createElement(FormControl, {\n        fullWidth: true,\n        className: classes.margin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"input-with-icon-adornment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Your Password\"), React.createElement(Input, {\n        id: \"adornment-password\",\n        type: this.state.showPassword ? \"text\" : \"password\",\n        name: \"password\",\n        label: \"Password\",\n        onChange: this.onChange,\n        endAdornment: React.createElement(InputAdornment, {\n          position: \"end\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          \"aria-label\": \"Toggle password visibility\",\n          onClick: this.handleClickShowPassword,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }, this.state.showPassword ? React.createElement(Visibility, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }) : React.createElement(VisibilityOff, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        justify: \"left\",\n        item: true,\n        sm: 12,\n        md: 6,\n        lg: 6,\n        xs: 6,\n        xl: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(FormControlLabel, {\n        control: React.createElement(Checkbox, {\n          id: \"remember_me\",\n          name: \"remember_me\",\n          checked: this.state.isChecked,\n          onChange: this.onChange,\n          value: \"Remember me\",\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }),\n        label: \"Remember me\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        justify: \"left\",\n        item: true,\n        sm: 12,\n        md: 6,\n        lg: 6,\n        xs: 6,\n        xl: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.login,\n        className: classes.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, \"Login\")), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"reset-password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        to: \"/admin/login/reset-password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, \"Forgot your password?\")))))) // <div className=\"p-grid p-justify-center\" style={{ height: \"100vh\" }}>\n      //   <div className=\"p-sm-12 p-md-4 p-lg-3 p-xl-3 p-col-align-center\">\n      //     <div className=\"p-col-12\">\n      //       <div className=\"p-inputgroup\">\n      //         <span className=\"p-inputgroup-addon\">\n      //           <i className=\"pi pi-envelope\" />\n      //         </span>\n      //         <InputText\n      //           name=\"email\"\n      //           placeholder=\"Email\"\n      //           onChange={this.onChange}\n      //         />\n      //       </div>\n      //     </div>\n      //     <div className=\"p-col-12\">\n      //       <div className=\"p-inputgroup\">\n      //         <span className=\"p-inputgroup-addon\">\n      //           <i className=\"pi pi-lock\" />\n      //         </span>\n      //         <Password\n      //           id=\"password\"\n      //           name=\"password\"\n      //           value={this.state.value}\n      //           onChange={this.onChange}\n      //           placeholder=\"Password\"\n      //         />\n      //       </div>\n      //     </div>\n      //     <div className=\"p-col p-grid\">\n      //       <div className=\"p-col-7\">\n      //         <Checkbox\n      //           inputId=\"remember_me\"\n      //           name=\"remember_me\"\n      //           value=\"remember\"\n      //           checked={this.state.isChecked}\n      //           onChange={this.onChange}\n      //         />\n      //         <label\n      //           htmlFor=\"remember_me\"\n      //           className=\"p-checkbox-label remember-me\"\n      //         >\n      //           Remember me\n      //         </label>\n      //       </div>\n      //       <div className=\"p-col-5 text-right\">\n      //         <Button\n      //           label=\"Login\"\n      //           className=\"p-button-raised p-button-secondary\"\n      //           onClick={this.login}\n      //         />\n      //       </div>\n      //     </div>\n      //     <div className=\"p-col-12\">\n      //       <div className=\"reset-password\">\n      //         <NavLink to=\"/admin/login/reset-password\">\n      //           <span>Forgot your password?</span>\n      //         </NavLink>\n      //       </div>\n      //     </div>\n      //   </div>\n      // </div>\n      ;\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nLogin.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Login);","map":{"version":3,"sources":["/Users/user/Documents/Dev/api-client/src/components/admin/login.jsx"],"names":["React","Component","Redirect","PropTypes","withStyles","NavLink","Grid","Paper","IconButton","Email","Lock","Input","InputLabel","InputAdornment","FormHelperText","FormControl","FormControlLabel","TextField","Button","Checkbox","Visibility","VisibilityOff","Divider","PostData","styles","theme","root","flexGrow","height","padding","loginContainer","paper","spacing","unit","color","palette","text","secondary","control","button","margin","Login","props","handleClickShowPassword","setState","state","showPassword","email","password","remember_me","isLoggedIn","login","bind","onChange","then","result","reponseJSON","data","sessionStorage","setItem","JSON","stringify","console","log","getItem","e","target","name","value","classes","isChecked","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\n//import MarkdownElement from \"@material-ui/docs/MarkdownElement\";\nimport \"./admin.css\";\nimport { NavLink } from \"react-router-dom\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Email from \"@material-ui/icons/Email\";\nimport Lock from \"@material-ui/icons/Lock\";\n\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport Divider from \"@material-ui/core/Divider\";\n\nimport { PostData } from \"../../services/PostData\";\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    height: \"100vh\",\n    padding: \"0 8%\"\n  },\n  loginContainer: {\n    height: \"100vh\"\n  },\n  paper: {\n    padding: theme.spacing.unit * 2,\n    color: theme.palette.text.secondary\n  },\n  control: {\n    padding: theme.spacing.unit * 2\n  },\n  button: {\n    margin: theme.spacing.unit\n  }\n});\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      remember_me: \"\",\n      isLoggedIn: false\n    };\n\n    this.login = this.login.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  login() {\n    if (this.state.email && this.state.password) {\n      PostData(\"login\", this.state).then(result => {\n        let reponseJSON = result;\n        if (reponseJSON.data) {\n          sessionStorage.setItem(\"user\", JSON.stringify(reponseJSON.data));\n          console.log(sessionStorage.getItem(\"user\"));\n          this.setState({ isLoggedIn: true });\n        } else {\n          console.log(\"Login error!\");\n        }\n      });\n    }\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n    //console.log(this.state);\n  }\n\n  handleClickShowPassword = () => {\n    this.setState(state => ({ showPassword: !state.showPassword }));\n  };\n\n  render() {\n    if (this.state.isLoggedIn) {\n      return <Redirect to=\"/admin/dashboard\" />;\n    }\n\n    const { classes } = this.props;\n\n    // if (sessionStorage.getItem(\"user\")) {\n    //   return <Redirect to=\"/admin/dashboard\" />;\n    // }\n\n    return (\n      <div className={classes.root}>\n        <Grid\n          className={classes.loginContainer}\n          container\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"center\"\n        >\n          <Grid item sm={12} md={4} lg={3} xs={12} xl={3}>\n            <FormControl fullWidth className={classes.margin}>\n              <InputLabel htmlFor=\"input-with-icon-adornment\">\n                Your Email\n              </InputLabel>\n              <Input\n                id=\"input-with-icon-adornment\"\n                name=\"email\"\n                label=\"Email\"\n                onChange={this.onChange}\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton aria-label=\"Toggle visibility\">\n                      <Email />\n                    </IconButton>\n                  </InputAdornment>\n                }\n              />\n            </FormControl>\n            <FormControl fullWidth className={classes.margin}>\n              <InputLabel htmlFor=\"input-with-icon-adornment\">\n                Your Password\n              </InputLabel>\n              <Input\n                id=\"adornment-password\"\n                type={this.state.showPassword ? \"text\" : \"password\"}\n                name=\"password\"\n                label=\"Password\"\n                onChange={this.onChange}\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"Toggle password visibility\"\n                      onClick={this.handleClickShowPassword}\n                    >\n                      {this.state.showPassword ? (\n                        <Visibility />\n                      ) : (\n                        <VisibilityOff />\n                      )}\n                    </IconButton>\n                  </InputAdornment>\n                }\n              />\n            </FormControl>\n            <Grid justify=\"left\" item sm={12} md={6} lg={6} xs={6} xl={6}>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    id=\"remember_me\"\n                    name=\"remember_me\"\n                    checked={this.state.isChecked}\n                    onChange={this.onChange}\n                    value=\"Remember me\"\n                    color=\"primary\"\n                  />\n                }\n                label=\"Remember me\"\n              />\n            </Grid>\n            <Grid justify=\"left\" item sm={12} md={6} lg={6} xs={6} xl={6}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={this.login}\n                className={classes.button}\n              >\n                Login\n              </Button>\n            </Grid>\n            <Divider />\n            <div className=\"reset-password\">\n              <NavLink to=\"/admin/login/reset-password\">\n                <span>Forgot your password?</span>\n              </NavLink>\n            </div>\n          </Grid>\n        </Grid>\n      </div>\n      // <div className=\"p-grid p-justify-center\" style={{ height: \"100vh\" }}>\n      //   <div className=\"p-sm-12 p-md-4 p-lg-3 p-xl-3 p-col-align-center\">\n      //     <div className=\"p-col-12\">\n      //       <div className=\"p-inputgroup\">\n      //         <span className=\"p-inputgroup-addon\">\n      //           <i className=\"pi pi-envelope\" />\n      //         </span>\n      //         <InputText\n      //           name=\"email\"\n      //           placeholder=\"Email\"\n      //           onChange={this.onChange}\n      //         />\n      //       </div>\n      //     </div>\n      //     <div className=\"p-col-12\">\n      //       <div className=\"p-inputgroup\">\n      //         <span className=\"p-inputgroup-addon\">\n      //           <i className=\"pi pi-lock\" />\n      //         </span>\n      //         <Password\n      //           id=\"password\"\n      //           name=\"password\"\n      //           value={this.state.value}\n      //           onChange={this.onChange}\n      //           placeholder=\"Password\"\n      //         />\n      //       </div>\n      //     </div>\n      //     <div className=\"p-col p-grid\">\n      //       <div className=\"p-col-7\">\n      //         <Checkbox\n      //           inputId=\"remember_me\"\n      //           name=\"remember_me\"\n      //           value=\"remember\"\n      //           checked={this.state.isChecked}\n      //           onChange={this.onChange}\n      //         />\n      //         <label\n      //           htmlFor=\"remember_me\"\n      //           className=\"p-checkbox-label remember-me\"\n      //         >\n      //           Remember me\n      //         </label>\n      //       </div>\n      //       <div className=\"p-col-5 text-right\">\n      //         <Button\n      //           label=\"Login\"\n      //           className=\"p-button-raised p-button-secondary\"\n      //           onClick={this.login}\n      //         />\n      //       </div>\n      //     </div>\n      //     <div className=\"p-col-12\">\n      //       <div className=\"reset-password\">\n      //         <NavLink to=\"/admin/login/reset-password\">\n      //           <span>Forgot your password?</span>\n      //         </NavLink>\n      //       </div>\n      //     </div>\n      //   </div>\n      // </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Login);\n"]},"metadata":{},"sourceType":"module"}