{"ast":null,"code":"import _classCallCheck from \"/Users/user/Documents/Dev/api-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/user/Documents/Dev/api-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nexport var SpinnerService =\n/*#__PURE__*/\nfunction () {\n  function SpinnerService() {\n    _classCallCheck(this, SpinnerService);\n\n    this.spinnerCache = new Set();\n  }\n\n  _createClass(SpinnerService, [{\n    key: \"_register\",\n    value: function _register(spinner) {\n      this.spinnerCache.add(spinner);\n    }\n  }, {\n    key: \"_unregister\",\n    value: function _unregister(spinnerToRemove) {\n      var _this = this;\n\n      this.spinnerCache.forEach(function (spinner) {\n        if (spinner === spinnerToRemove) {\n          _this.spinnerCache.delete(spinner);\n        }\n      });\n    }\n  }, {\n    key: \"_unregisterGroup\",\n    value: function _unregisterGroup(spinnerGroup) {\n      var _this2 = this;\n\n      this.spinnerCache.forEach(function (spinner) {\n        if (spinner.group === spinnerGroup) {\n          _this2.spinnerCache.delete(spinner);\n        }\n      });\n    }\n  }, {\n    key: \"_unregisterAll\",\n    value: function _unregisterAll() {\n      this.spinnerCache.clear();\n    }\n  }, {\n    key: \"show\",\n    value: function show(spinnerName) {\n      this.spinnerCache.forEach(function (spinner) {\n        if (spinner.name === spinnerName) {\n          spinner.show = true;\n        }\n      });\n    }\n  }, {\n    key: \"hide\",\n    value: function hide(spinnerName) {\n      this.spinnerCache.forEach(function (spinner) {\n        if (spinner.name === spinnerName) {\n          spinner.show = false;\n        }\n      });\n    }\n  }, {\n    key: \"showGroup\",\n    value: function showGroup(spinnerGroup) {\n      this.spinnerCache.forEach(function (spinner) {\n        if (spinner.group === spinnerGroup) {\n          spinner.show = true;\n        }\n      });\n    }\n  }, {\n    key: \"hideGroup\",\n    value: function hideGroup(spinnerGroup) {\n      this.spinnerCache.forEach(function (spinner) {\n        if (spinner.group === spinnerGroup) {\n          spinner.show = false;\n        }\n      });\n    }\n  }, {\n    key: \"showAll\",\n    value: function showAll() {\n      this.spinnerCache.forEach(function (spinner) {\n        return spinner.show = true;\n      });\n    }\n  }, {\n    key: \"hideAll\",\n    value: function hideAll() {\n      this.spinnerCache.forEach(function (spinner) {\n        return spinner.show = false;\n      });\n    }\n  }, {\n    key: \"isShowing\",\n    value: function isShowing(spinnerName) {\n      var showing;\n      this.spinnerCache.forEach(function (spinner) {\n        if (spinner.name === spinnerName) {\n          showing = spinner.show;\n        }\n      });\n      return showing;\n    }\n  }]);\n\n  return SpinnerService;\n}();\nvar spinnerService = new SpinnerService();\nexport { spinnerService };","map":{"version":3,"sources":["/Users/user/Documents/Dev/api-client/src/services/Spinner.services.jsx"],"names":["SpinnerService","spinnerCache","Set","spinner","add","spinnerToRemove","forEach","delete","spinnerGroup","group","clear","spinnerName","name","show","showing","spinnerService"],"mappings":";;AAAA,WAAaA,cAAb;AAAA;AAAA;AACE,4BAAc;AAAA;;AACZ,SAAKC,YAAL,GAAoB,IAAIC,GAAJ,EAApB;AACD;;AAHH;AAAA;AAAA,8BAKYC,OALZ,EAKqB;AACjB,WAAKF,YAAL,CAAkBG,GAAlB,CAAsBD,OAAtB;AACD;AAPH;AAAA;AAAA,gCAScE,eATd,EAS+B;AAAA;;AAC3B,WAAKJ,YAAL,CAAkBK,OAAlB,CAA0B,UAAAH,OAAO,EAAI;AACnC,YAAIA,OAAO,KAAKE,eAAhB,EAAiC;AAC/B,UAAA,KAAI,CAACJ,YAAL,CAAkBM,MAAlB,CAAyBJ,OAAzB;AACD;AACF,OAJD;AAKD;AAfH;AAAA;AAAA,qCAiBmBK,YAjBnB,EAiBiC;AAAA;;AAC7B,WAAKP,YAAL,CAAkBK,OAAlB,CAA0B,UAAAH,OAAO,EAAI;AACnC,YAAIA,OAAO,CAACM,KAAR,KAAkBD,YAAtB,EAAoC;AAClC,UAAA,MAAI,CAACP,YAAL,CAAkBM,MAAlB,CAAyBJ,OAAzB;AACD;AACF,OAJD;AAKD;AAvBH;AAAA;AAAA,qCAyBmB;AACf,WAAKF,YAAL,CAAkBS,KAAlB;AACD;AA3BH;AAAA;AAAA,yBA6BOC,WA7BP,EA6BoB;AAChB,WAAKV,YAAL,CAAkBK,OAAlB,CAA0B,UAAAH,OAAO,EAAI;AACnC,YAAIA,OAAO,CAACS,IAAR,KAAiBD,WAArB,EAAkC;AAChCR,UAAAA,OAAO,CAACU,IAAR,GAAe,IAAf;AACD;AACF,OAJD;AAKD;AAnCH;AAAA;AAAA,yBAqCOF,WArCP,EAqCoB;AAChB,WAAKV,YAAL,CAAkBK,OAAlB,CAA0B,UAAAH,OAAO,EAAI;AACnC,YAAIA,OAAO,CAACS,IAAR,KAAiBD,WAArB,EAAkC;AAChCR,UAAAA,OAAO,CAACU,IAAR,GAAe,KAAf;AACD;AACF,OAJD;AAKD;AA3CH;AAAA;AAAA,8BA6CYL,YA7CZ,EA6C0B;AACtB,WAAKP,YAAL,CAAkBK,OAAlB,CAA0B,UAAAH,OAAO,EAAI;AACnC,YAAIA,OAAO,CAACM,KAAR,KAAkBD,YAAtB,EAAoC;AAClCL,UAAAA,OAAO,CAACU,IAAR,GAAe,IAAf;AACD;AACF,OAJD;AAKD;AAnDH;AAAA;AAAA,8BAqDYL,YArDZ,EAqD0B;AACtB,WAAKP,YAAL,CAAkBK,OAAlB,CAA0B,UAAAH,OAAO,EAAI;AACnC,YAAIA,OAAO,CAACM,KAAR,KAAkBD,YAAtB,EAAoC;AAClCL,UAAAA,OAAO,CAACU,IAAR,GAAe,KAAf;AACD;AACF,OAJD;AAKD;AA3DH;AAAA;AAAA,8BA6DY;AACR,WAAKZ,YAAL,CAAkBK,OAAlB,CAA0B,UAAAH,OAAO;AAAA,eAAKA,OAAO,CAACU,IAAR,GAAe,IAApB;AAAA,OAAjC;AACD;AA/DH;AAAA;AAAA,8BAiEY;AACR,WAAKZ,YAAL,CAAkBK,OAAlB,CAA0B,UAAAH,OAAO;AAAA,eAAKA,OAAO,CAACU,IAAR,GAAe,KAApB;AAAA,OAAjC;AACD;AAnEH;AAAA;AAAA,8BAqEYF,WArEZ,EAqEyB;AACrB,UAAIG,OAAJ;AACA,WAAKb,YAAL,CAAkBK,OAAlB,CAA0B,UAAAH,OAAO,EAAI;AACnC,YAAIA,OAAO,CAACS,IAAR,KAAiBD,WAArB,EAAkC;AAChCG,UAAAA,OAAO,GAAGX,OAAO,CAACU,IAAlB;AACD;AACF,OAJD;AAKA,aAAOC,OAAP;AACD;AA7EH;;AAAA;AAAA;AAgFA,IAAMC,cAAc,GAAG,IAAIf,cAAJ,EAAvB;AACA,SAASe,cAAT","sourcesContent":["export class SpinnerService {\n  constructor() {\n    this.spinnerCache = new Set();\n  }\n\n  _register(spinner) {\n    this.spinnerCache.add(spinner);\n  }\n\n  _unregister(spinnerToRemove) {\n    this.spinnerCache.forEach(spinner => {\n      if (spinner === spinnerToRemove) {\n        this.spinnerCache.delete(spinner);\n      }\n    });\n  }\n\n  _unregisterGroup(spinnerGroup) {\n    this.spinnerCache.forEach(spinner => {\n      if (spinner.group === spinnerGroup) {\n        this.spinnerCache.delete(spinner);\n      }\n    });\n  }\n\n  _unregisterAll() {\n    this.spinnerCache.clear();\n  }\n\n  show(spinnerName) {\n    this.spinnerCache.forEach(spinner => {\n      if (spinner.name === spinnerName) {\n        spinner.show = true;\n      }\n    });\n  }\n\n  hide(spinnerName) {\n    this.spinnerCache.forEach(spinner => {\n      if (spinner.name === spinnerName) {\n        spinner.show = false;\n      }\n    });\n  }\n\n  showGroup(spinnerGroup) {\n    this.spinnerCache.forEach(spinner => {\n      if (spinner.group === spinnerGroup) {\n        spinner.show = true;\n      }\n    });\n  }\n\n  hideGroup(spinnerGroup) {\n    this.spinnerCache.forEach(spinner => {\n      if (spinner.group === spinnerGroup) {\n        spinner.show = false;\n      }\n    });\n  }\n\n  showAll() {\n    this.spinnerCache.forEach(spinner => (spinner.show = true));\n  }\n\n  hideAll() {\n    this.spinnerCache.forEach(spinner => (spinner.show = false));\n  }\n\n  isShowing(spinnerName) {\n    let showing;\n    this.spinnerCache.forEach(spinner => {\n      if (spinner.name === spinnerName) {\n        showing = spinner.show;\n      }\n    });\n    return showing;\n  }\n}\n\nconst spinnerService = new SpinnerService();\nexport { spinnerService };\n"]},"metadata":{},"sourceType":"module"}