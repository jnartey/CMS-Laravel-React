{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.InputText = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _KeyFilter = require('../keyfilter/KeyFilter');\n\nvar _KeyFilter2 = _interopRequireDefault(_KeyFilter);\n\nvar _Tooltip = require('../tooltip/Tooltip');\n\nvar _Tooltip2 = _interopRequireDefault(_Tooltip);\n\nvar _DomHandler = require('../utils/DomHandler');\n\nvar _DomHandler2 = _interopRequireDefault(_DomHandler);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar InputText = exports.InputText = function (_Component) {\n  _inherits(InputText, _Component);\n\n  function InputText(props) {\n    _classCallCheck(this, InputText);\n\n    var _this = _possibleConstructorReturn(this, (InputText.__proto__ || Object.getPrototypeOf(InputText)).call(this, props));\n\n    _this.onInput = _this.onInput.bind(_this);\n    _this.onKeyPress = _this.onKeyPress.bind(_this);\n    return _this;\n  }\n\n  _createClass(InputText, [{\n    key: 'onKeyPress',\n    value: function onKeyPress(event) {\n      if (this.props.onKeyPress) {\n        this.props.onKeyPress(event);\n      }\n\n      if (this.props.keyfilter) {\n        _KeyFilter2.default.onKeyPress(event, this.props.keyfilter, this.props.validateOnly);\n      }\n    }\n  }, {\n    key: 'onInput',\n    value: function onInput(event) {\n      var validatePattern = true;\n\n      if (this.props.keyfilter && this.props.validateOnly) {\n        validatePattern = _KeyFilter2.default.validate(event, this.props.keyfilter);\n      }\n\n      if (this.props.onInput) {\n        this.props.onInput(event, validatePattern);\n      }\n\n      if (!this.props.onChange) {\n        if (event.target.value.length > 0) _DomHandler2.default.addClass(event.target, 'p-filled');else _DomHandler2.default.removeClass(event.target, 'p-filled');\n      }\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      if (this.props.tooltip) {\n        this.tooltip = new _Tooltip2.default({\n          target: this.inputEl,\n          content: this.props.tooltip,\n          options: this.props.tooltipOptions\n        });\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      if (this.tooltip) {\n        this.tooltip.destroy();\n        this.tooltip = null;\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var className = (0, _classnames2.default)('p-inputtext p-component', this.props.className, {\n        'p-disabled': this.props.disabled,\n        'p-filled': this.props.value != null && this.props.value.toString().length > 0 || this.props.defaultValue != null && this.props.defaultValue.toString().length > 0\n      });\n      var inputProps = Object.assign({}, this.props);\n      delete inputProps.onInput;\n      delete inputProps.onKeyPress;\n      delete inputProps.keyfilter;\n      delete inputProps.validateOnly;\n      delete inputProps.tooltip;\n      delete inputProps.tooltipOptions;\n      return _react2.default.createElement('input', _extends({\n        ref: function ref(el) {\n          return _this2.inputEl = el;\n        }\n      }, inputProps, {\n        className: className,\n        onInput: this.onInput,\n        onKeyPress: this.onKeyPress\n      }));\n    }\n  }]);\n\n  return InputText;\n}(_react.Component);\n\nInputText.defaultProps = {\n  onInput: null,\n  onKeyPress: null,\n  keyfilter: null,\n  validateOnly: false,\n  tooltip: null,\n  tooltipOptions: null\n};\nInputText.propTypes = {\n  onInput: _propTypes2.default.func,\n  onKeyPress: _propTypes2.default.func,\n  keyfilter: _propTypes2.default.any,\n  validateOnly: _propTypes2.default.bool,\n  tooltip: _propTypes2.default.string,\n  tooltipOptions: _propTypes2.default.object\n};","map":null,"metadata":{},"sourceType":"script"}