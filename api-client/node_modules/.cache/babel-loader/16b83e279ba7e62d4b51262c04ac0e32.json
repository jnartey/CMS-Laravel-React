{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Panel = undefined;\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _DomHandler = require('../utils/DomHandler');\n\nvar _DomHandler2 = _interopRequireDefault(_DomHandler);\n\nvar _UniqueComponentId = require('../utils/UniqueComponentId');\n\nvar _UniqueComponentId2 = _interopRequireDefault(_UniqueComponentId);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Panel = exports.Panel = function (_Component) {\n  _inherits(Panel, _Component);\n\n  function Panel(props) {\n    _classCallCheck(this, Panel);\n\n    var _this = _possibleConstructorReturn(this, (Panel.__proto__ || Object.getPrototypeOf(Panel)).call(this, props));\n\n    if (!_this.props.onToggle) {\n      _this.state = {\n        collapsed: _this.props.collapsed\n      };\n    }\n\n    _this.toggle = _this.toggle.bind(_this);\n    _this.id = _this.props.id || (0, _UniqueComponentId2.default)();\n    return _this;\n  }\n\n  _createClass(Panel, [{\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      var _this2 = this;\n\n      var collapsed = this.props.onToggle ? this.props.collapsed : this.state.collapsed;\n\n      if (this.props.toggleable && !collapsed && this.expanding) {\n        _DomHandler2.default.addClass(this.contentWrapper, 'p-panel-content-wrapper-expanding');\n\n        setTimeout(function () {\n          _DomHandler2.default.removeClass(_this2.contentWrapper, 'p-panel-content-wrapper-expanding');\n\n          _this2.expanding = false;\n        }, 500);\n      }\n    }\n  }, {\n    key: 'toggle',\n    value: function toggle(event) {\n      if (this.props.toggleable) {\n        var collapsed = this.props.onToggle ? this.props.collapsed : this.state.collapsed;\n        if (collapsed) this.expand(event);else this.collapse(event);\n\n        if (this.props.onToggle) {\n          this.props.onToggle({\n            originalEvent: event,\n            value: !collapsed\n          });\n        }\n      }\n\n      event.preventDefault();\n    }\n  }, {\n    key: 'expand',\n    value: function expand(event) {\n      if (!this.props.onToggle) {\n        this.setState({\n          collapsed: false\n        });\n      }\n\n      this.expanding = true;\n\n      if (this.props.onExpand) {\n        this.props.onExpand(event);\n      }\n    }\n  }, {\n    key: 'collapse',\n    value: function collapse(event) {\n      if (!this.props.onToggle) {\n        this.setState({\n          collapsed: true\n        });\n      }\n\n      if (this.props.onCollapse) {\n        this.props.onCollapse(event);\n      }\n    }\n  }, {\n    key: 'renderToggleIcon',\n    value: function renderToggleIcon(collapsed) {\n      if (this.props.toggleable) {\n        var id = this.id + '_label';\n        var ariaControls = this.id + '_content';\n        return _react2.default.createElement('a', {\n          href: '#' + ariaControls,\n          className: 'p-panel-titlebar-icon p-panel-titlebar-toggler',\n          onClick: this.toggle,\n          id: id,\n          'aria-controls': ariaControls,\n          'aria-expanded': !collapsed,\n          role: 'tab'\n        }, _react2.default.createElement('span', {\n          className: (0, _classnames2.default)('pi', {\n            'pi-plus': collapsed,\n            'pi-minus': !collapsed\n          })\n        }));\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: 'renderHeader',\n    value: function renderHeader(collapsed) {\n      if (this.props.header || this.props.toggleable) {\n        var toggleIcon = this.renderToggleIcon(collapsed);\n        return _react2.default.createElement('div', {\n          className: 'p-panel-titlebar'\n        }, _react2.default.createElement('span', {\n          className: 'p-panel-title'\n        }, this.props.header), toggleIcon);\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: 'renderContent',\n    value: function renderContent(collapsed) {\n      var _this3 = this;\n\n      var className = (0, _classnames2.default)('p-panel-content-wrapper', {\n        'p-panel-content-wrapper-collapsed': collapsed,\n        'p-panel-content-wrapper-expanded': !collapsed\n      });\n      var id = this.id + '_content';\n      var ariaLabelledBy = this.id + '_label';\n      return _react2.default.createElement('div', {\n        ref: function ref(el) {\n          return _this3.contentWrapper = el;\n        },\n        className: className,\n        id: id,\n        'aria-labelledby': ariaLabelledBy,\n        'aria-hidden': collapsed\n      }, _react2.default.createElement('div', {\n        className: 'p-panel-content'\n      }, this.props.children));\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var className = (0, _classnames2.default)('p-panel p-component', this.props.className);\n      var collapsed = this.props.toggleable ? this.props.onToggle ? this.props.collapsed : this.state.collapsed : false;\n      var header = this.renderHeader(collapsed);\n      var content = this.renderContent(collapsed);\n      return _react2.default.createElement('div', {\n        id: this.props.id,\n        className: className,\n        style: this.props.style\n      }, header, content);\n    }\n  }]);\n\n  return Panel;\n}(_react.Component);\n\nPanel.defaultProps = {\n  id: null,\n  header: null,\n  toggleable: null,\n  style: null,\n  className: null,\n  collapsed: null,\n  onExpand: null,\n  onCollapse: null,\n  onToggle: null\n};\nPanel.propTypes = {\n  id: _propTypes2.default.string,\n  header: _propTypes2.default.any,\n  toggleable: _propTypes2.default.bool,\n  style: _propTypes2.default.object,\n  className: _propTypes2.default.string,\n  collapsed: _propTypes2.default.bool,\n  onExpand: _propTypes2.default.func,\n  onCollapse: _propTypes2.default.func,\n  onToggle: _propTypes2.default.func\n};","map":null,"metadata":{},"sourceType":"script"}